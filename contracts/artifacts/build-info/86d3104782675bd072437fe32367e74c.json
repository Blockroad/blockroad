{
	"id": "86d3104782675bd072437fe32367e74c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BEP20Token.sol": {
				"content": "pragma solidity 0.5.16;\n\ninterface IBEP20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor () internal { }\n\n  function _msgSender() internal view returns (address payable) {\n    return msg.sender;\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n   * @dev Returns the addition of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `+` operator.\n   *\n   * Requirements:\n   * - Addition cannot overflow.\n   */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    return sub(a, b, \"SafeMath: subtraction overflow\");\n  }\n\n  /**\n   * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n   * overflow (when the result is negative).\n   *\n   * Counterpart to Solidity's `-` operator.\n   *\n   * Requirements:\n   * - Subtraction cannot overflow.\n   */\n  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b <= a, errorMessage);\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the multiplication of two unsigned integers, reverting on\n   * overflow.\n   *\n   * Counterpart to Solidity's `*` operator.\n   *\n   * Requirements:\n   * - Multiplication cannot overflow.\n   */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    return div(a, b, \"SafeMath: division by zero\");\n  }\n\n  /**\n   * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n   * division by zero. The result is rounded towards zero.\n   *\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n   * `revert` opcode (which leaves remaining gas untouched) while Solidity\n   * uses an invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, errorMessage);\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    return mod(a, b, \"SafeMath: modulo by zero\");\n  }\n\n  /**\n   * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n   * Reverts with custom message when dividing by zero.\n   *\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\n   * opcode (which leaves remaining gas untouched) while Solidity uses an\n   * invalid opcode to revert (consuming all remaining gas).\n   *\n   * Requirements:\n   * - The divisor cannot be zero.\n   */\n  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n    require(b != 0, errorMessage);\n    return a % b;\n  }\n}\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () internal {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ncontract BEP20Token is Context, IBEP20, Ownable {\n  using SafeMath for uint256;\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n  uint8 private _decimals;\n  string private _symbol;\n  string private _name;\n\n  constructor() public {\n    _name = \"Blockroad\";\n    _symbol = \"BLOCK\";\n    _decimals = 18;\n    _totalSupply = 10000000000000000000000000;\n    _balances[msg.sender] = _totalSupply;\n\n    emit Transfer(address(0), msg.sender, _totalSupply);\n  }\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address) {\n    return owner();\n  }\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {BEP20-totalSupply}.\n   */\n  function totalSupply() external view returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {BEP20-balanceOf}.\n   */\n  function balanceOf(address account) external view returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {BEP20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-allowance}.\n   */\n  function allowance(address owner, address spender) external view returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {BEP20-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) external returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {BEP20-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {BEP20};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for `sender`'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\"));\n    return true;\n  }\n\n  /**\n   * @dev Atomically increases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n    return true;\n  }\n\n  /**\n   * @dev Atomically decreases the allowance granted to `spender` by the caller.\n   *\n   * This is an alternative to {approve} that can be used as a mitigation for\n   * problems described in {BEP20-approve}.\n   *\n   * Emits an {Approval} event indicating the updated allowance.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   * - `spender` must have allowance for the caller of at least\n   * `subtractedValue`.\n   */\n  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\"));\n    return true;\n  }\n\n  /**\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n   * the total supply.\n   *\n   * Requirements\n   *\n   * - `msg.sender` must be the token owner\n   */\n  function mint(uint256 amount) public onlyOwner returns (bool) {\n    _mint(_msgSender(), amount);\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal {\n    require(sender != address(0), \"BEP20: transfer from the zero address\");\n    require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\n    _balances[recipient] = _balances[recipient].add(amount);\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n   * the total supply.\n   *\n   * Emits a {Transfer} event with `from` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `to` cannot be the zero address.\n   */\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: mint to the zero address\");\n\n    _totalSupply = _totalSupply.add(amount);\n    _balances[account] = _balances[account].add(amount);\n    emit Transfer(address(0), account, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"BEP20: burn from the zero address\");\n\n    _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\n    _totalSupply = _totalSupply.sub(amount);\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(address owner, address spender, uint256 amount) internal {\n    require(owner != address(0), \"BEP20: approve from the zero address\");\n    require(spender != address(0), \"BEP20: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n   * from the caller's allowance.\n   *\n   * See {_burn} and {_approve}.\n   */\n  function _burnFrom(address account, uint256 amount) internal {\n    _burn(account, amount);\n    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\"));\n  }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/BEP20Token.sol": {
				"BEP20Token": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See {BEP20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {BEP20-approve}.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {BEP20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address."
							},
							"mint(uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {BEP20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {BEP20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {BEP20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/BEP20Token.sol\":10968:18537  contract BEP20Token is Context, IBEP20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/BEP20Token.sol\":11286:11527  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"contracts/BEP20Token.sol\":9527:9544  address msgSender */\n  0x00\n    /* \"contracts/BEP20Token.sol\":9547:9559  _msgSender() */\n  tag_7\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"contracts/BEP20Token.sol\":9547:9557  _msgSender */\n  tag_8\n    /* \"contracts/BEP20Token.sol\":9547:9559  _msgSender() */\n  and\n  jump\t// in\ntag_7:\n    /* \"contracts/BEP20Token.sol\":9565:9571  _owner */\n  0x00\n    /* \"contracts/BEP20Token.sol\":9565:9583  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/BEP20Token.sol\":9594:9637  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"contracts/BEP20Token.sol\":9565:9583  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"contracts/BEP20Token.sol\":9594:9637  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/BEP20Token.sol\":9565:9571  _owner */\n  dup3\n  swap1\n    /* \"contracts/BEP20Token.sol\":9594:9637  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"contracts/BEP20Token.sol\":11313:11332  _name = \"Blockroad\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x09\n  dup1\n  dup3\n  mstore\n  shl(0xba, 0x109b1bd8dadc9bd859)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_10\n  swap2\n    /* \"contracts/BEP20Token.sol\":11313:11318  _name */\n  0x06\n  swap2\n    /* \"contracts/BEP20Token.sol\":11313:11332  _name = \"Blockroad\" */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/BEP20Token.sol\":11338:11355  _symbol = \"BLOCK\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x05\n  dup1\n  dup3\n  mstore\n  shl(0xd8, 0x424c4f434b)\n  0x20\n  swap1\n  swap3\n  add\n  swap2\n  dup3\n  mstore\n  tag_12\n  swap2\n  dup2\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contracts/BEP20Token.sol\":11361:11370  _decimals */\n  0x04\n    /* \"contracts/BEP20Token.sol\":11361:11375  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"contracts/BEP20Token.sol\":11373:11375  18 */\n  0x12\n    /* \"contracts/BEP20Token.sol\":11361:11375  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"contracts/BEP20Token.sol\":11396:11422  10000000000000000000000000 */\n  0x084595161401484a000000\n    /* \"contracts/BEP20Token.sol\":11381:11393  _totalSupply */\n  0x03\n    /* \"contracts/BEP20Token.sol\":11381:11422  _totalSupply = 10000000000000000000000000 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/BEP20Token.sol\":11438:11448  msg.sender */\n  caller\n    /* \"contracts/BEP20Token.sol\":11361:11370  _decimals */\n  0x00\n    /* \"contracts/BEP20Token.sol\":11428:11449  _balances[msg.sender] */\n  dup2\n  dup2\n  mstore\n    /* \"contracts/BEP20Token.sol\":11361:11375  _decimals = 18 */\n  0x01\n    /* \"contracts/BEP20Token.sol\":11428:11449  _balances[msg.sender] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"contracts/BEP20Token.sol\":11428:11464  _balances[msg.sender] = _totalSupply */\n  dup6\n  swap1\n  sstore\n    /* \"contracts/BEP20Token.sol\":11476:11522  Transfer(address(0), msg.sender, _totalSupply) */\n  dup1\n  mload\n  swap5\n  dup6\n  mstore\n  mload\n    /* \"contracts/BEP20Token.sol\":11438:11448  msg.sender */\n  swap3\n  swap4\n    /* \"contracts/BEP20Token.sol\":11361:11370  _decimals */\n  swap2\n  swap3\n    /* \"contracts/BEP20Token.sol\":11476:11522  Transfer(address(0), msg.sender, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap3\n  dup2\n  swap1\n  sub\n  swap1\n  swap2\n  add\n  swap1\n  log3\n    /* \"contracts/BEP20Token.sol\":10968:18537  contract BEP20Token is Context, IBEP20, Ownable {... */\n  jump(tag_13)\n    /* \"contracts/BEP20Token.sol\":3595:3685  function _msgSender() internal view returns (address payable) {... */\ntag_8:\n    /* \"contracts/BEP20Token.sol\":3670:3680  msg.sender */\n  caller\n    /* \"contracts/BEP20Token.sol\":3595:3685  function _msgSender() internal view returns (address payable) {... */\ntag_14:\n  swap1\n  jump\t// out\n    /* \"contracts/BEP20Token.sol\":10968:18537  contract BEP20Token is Context, IBEP20, Ownable {... */\ntag_11:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_16\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_18)\ntag_16:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_18\n  jumpi\n  swap2\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_17)\ntag_18:\n  pop\n  tag_19\n  swap3\n  swap2\n  pop\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_14\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_19\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_22)\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEP20Token.sol\":10968:18537  contract BEP20Token is Context, IBEP20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/BEP20Token.sol\":10968:18537  contract BEP20Token is Context, IBEP20, Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x893d20e8\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x893d20e8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa0712d68\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/BEP20Token.sol\":11971:12048  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_24:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_24)\n    tag_26:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP20Token.sol\":11971:12048  function name() external view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_27:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":12966:13107  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":12966:13107  function approve(address spender, uint256 amount) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_30\n      jump\t// in\n    tag_28:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":12099:12184  function totalSupply() external view returns (uint256) {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":13538:13826  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":13538:13826  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_35\n      jump\t// in\n        /* \"contracts/BEP20Token.sol\":11713:11790  function decimals() external view returns (uint8) {... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":14194:14391  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_8:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":14194:14391  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_40\n      jump\t// in\n        /* \"contracts/BEP20Token.sol\":12233:12337  function balanceOf(address account) external view returns (uint256) {... */\n    tag_9:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n      pop\n        /* \"contracts/BEP20Token.sol\":12233:12337  function balanceOf(address account) external view returns (uint256) {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_43\n      jump\t// in\n        /* \"contracts/BEP20Token.sol\":10293:10420  function renounceOwnership() public onlyOwner {... */\n    tag_10:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/BEP20Token.sol\":11582:11659  function getOwner() external view returns (address) {... */\n    tag_11:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/BEP20Token.sol\":9710:9781  function owner() public view returns (address) {... */\n    tag_12:\n      tag_46\n      tag_49\n      jump\t// in\n        /* \"contracts/BEP20Token.sol\":11842:11923  function symbol() external view returns (string memory) {... */\n    tag_13:\n      tag_22\n      tag_51\n      jump\t// in\n        /* \"contracts/BEP20Token.sol\":15285:15402  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_14:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n      pop\n        /* \"contracts/BEP20Token.sol\":15285:15402  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      calldataload\n      tag_58\n      jump\t// in\n        /* \"contracts/BEP20Token.sol\":14847:15095  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_15:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_60\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_60:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":14847:15095  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_61\n      jump\t// in\n        /* \"contracts/BEP20Token.sol\":12521:12668  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_16:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_63\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_63:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":12521:12668  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_64\n      jump\t// in\n        /* \"contracts/BEP20Token.sol\":12717:12845  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_17:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_66\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_66:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":12717:12845  function allowance(address owner, address spender) external view returns (uint256) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_67\n      jump\t// in\n        /* \"contracts/BEP20Token.sol\":10559:10660  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_18:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n      pop\n        /* \"contracts/BEP20Token.sol\":10559:10660  function transferOwnership(address newOwner) public onlyOwner {... */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_70\n      jump\t// in\n        /* \"contracts/BEP20Token.sol\":11971:12048  function name() external view returns (string memory) {... */\n    tag_23:\n        /* \"contracts/BEP20Token.sol\":12038:12043  _name */\n      0x06\n        /* \"contracts/BEP20Token.sol\":12031:12043  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/BEP20Token.sol\":12010:12023  string memory */\n      0x60\n      swap4\n        /* \"contracts/BEP20Token.sol\":12031:12043  return _name */\n      swap1\n      swap3\n        /* \"contracts/BEP20Token.sol\":12038:12043  _name */\n      swap1\n      swap2\n        /* \"contracts/BEP20Token.sol\":12031:12043  return _name */\n      dup4\n      add\n        /* \"contracts/BEP20Token.sol\":12038:12043  _name */\n      dup3\n        /* \"contracts/BEP20Token.sol\":12031:12043  return _name */\n      dup3\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n    tag_73:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_74:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_74\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_72:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":11971:12048  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":12966:13107  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_30:\n        /* \"contracts/BEP20Token.sol\":13034:13038  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":13046:13085  _approve(_msgSender(), spender, amount) */\n      tag_76\n        /* \"contracts/BEP20Token.sol\":13055:13067  _msgSender() */\n      tag_77\n        /* \"contracts/BEP20Token.sol\":13055:13065  _msgSender */\n      tag_78\n        /* \"contracts/BEP20Token.sol\":13055:13067  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"contracts/BEP20Token.sol\":13069:13076  spender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":13078:13084  amount */\n      dup5\n        /* \"contracts/BEP20Token.sol\":13046:13054  _approve */\n      tag_79\n        /* \"contracts/BEP20Token.sol\":13046:13085  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_76:\n      pop\n        /* \"contracts/BEP20Token.sol\":13098:13102  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":12966:13107  function approve(address spender, uint256 amount) external returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":12099:12184  function totalSupply() external view returns (uint256) {... */\n    tag_32:\n        /* \"contracts/BEP20Token.sol\":12167:12179  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP20Token.sol\":12099:12184  function totalSupply() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":13538:13826  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_35:\n        /* \"contracts/BEP20Token.sol\":13629:13633  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":13641:13677  _transfer(sender, recipient, amount) */\n      tag_82\n        /* \"contracts/BEP20Token.sol\":13651:13657  sender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":13659:13668  recipient */\n      dup5\n        /* \"contracts/BEP20Token.sol\":13670:13676  amount */\n      dup5\n        /* \"contracts/BEP20Token.sol\":13641:13650  _transfer */\n      tag_83\n        /* \"contracts/BEP20Token.sol\":13641:13677  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/BEP20Token.sol\":13683:13804  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      tag_84\n        /* \"contracts/BEP20Token.sol\":13692:13698  sender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":13700:13712  _msgSender() */\n      tag_85\n        /* \"contracts/BEP20Token.sol\":13700:13710  _msgSender */\n      tag_78\n        /* \"contracts/BEP20Token.sol\":13700:13712  _msgSender() */\n      jump\t// in\n    tag_85:\n        /* \"contracts/BEP20Token.sol\":13714:13803  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      tag_86\n        /* \"contracts/BEP20Token.sol\":13752:13758  amount */\n      dup6\n        /* \"contracts/BEP20Token.sol\":13714:13803  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":13714:13733  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20Token.sol\":13714:13725  _allowances */\n      0x02\n        /* \"contracts/BEP20Token.sol\":13714:13733  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/BEP20Token.sol\":13734:13746  _msgSender() */\n      tag_87\n        /* \"contracts/BEP20Token.sol\":13734:13744  _msgSender */\n      tag_78\n        /* \"contracts/BEP20Token.sol\":13734:13746  _msgSender() */\n      jump\t// in\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":13714:13747  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"contracts/BEP20Token.sol\":13714:13803  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/BEP20Token.sol\":13714:13751  _allowances[sender][_msgSender()].sub */\n      tag_88\n        /* \"contracts/BEP20Token.sol\":13714:13803  _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\") */\n      and\n      jump\t// in\n    tag_86:\n        /* \"contracts/BEP20Token.sol\":13683:13691  _approve */\n      tag_79\n        /* \"contracts/BEP20Token.sol\":13683:13804  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_84:\n      pop\n        /* \"contracts/BEP20Token.sol\":13817:13821  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":13538:13826  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":11713:11790  function decimals() external view returns (uint8) {... */\n    tag_37:\n        /* \"contracts/BEP20Token.sol\":11776:11785  _decimals */\n      and(0xff, sload(0x04))\n        /* \"contracts/BEP20Token.sol\":11713:11790  function decimals() external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":14194:14391  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_40:\n        /* \"contracts/BEP20Token.sol\":14274:14278  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":14286:14369  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_76\n        /* \"contracts/BEP20Token.sol\":14295:14307  _msgSender() */\n      tag_92\n        /* \"contracts/BEP20Token.sol\":14295:14305  _msgSender */\n      tag_78\n        /* \"contracts/BEP20Token.sol\":14295:14307  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"contracts/BEP20Token.sol\":14309:14316  spender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":14318:14368  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_86\n        /* \"contracts/BEP20Token.sol\":14357:14367  addedValue */\n      dup6\n        /* \"contracts/BEP20Token.sol\":14318:14329  _allowances */\n      0x02\n        /* \"contracts/BEP20Token.sol\":14318:14343  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":14330:14342  _msgSender() */\n      tag_94\n        /* \"contracts/BEP20Token.sol\":14330:14340  _msgSender */\n      tag_78\n        /* \"contracts/BEP20Token.sol\":14330:14342  _msgSender() */\n      jump\t// in\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":14318:14343  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/BEP20Token.sol\":14318:14352  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/BEP20Token.sol\":14318:14368  _allowances[_msgSender()][spender].add(addedValue) */\n      0xffffffff\n        /* \"contracts/BEP20Token.sol\":14318:14356  _allowances[_msgSender()][spender].add */\n      tag_95\n        /* \"contracts/BEP20Token.sol\":14318:14368  _allowances[_msgSender()][spender].add(addedValue) */\n      and\n      jump\t// in\n        /* \"contracts/BEP20Token.sol\":12233:12337  function balanceOf(address account) external view returns (uint256) {... */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":12314:12332  _balances[account] */\n      and\n        /* \"contracts/BEP20Token.sol\":12292:12299  uint256 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":12314:12332  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20Token.sol\":12314:12323  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":12314:12332  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/BEP20Token.sol\":12233:12337  function balanceOf(address account) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":10293:10420  function renounceOwnership() public onlyOwner {... */\n    tag_45:\n        /* \"contracts/BEP20Token.sol\":9906:9918  _msgSender() */\n      tag_98\n        /* \"contracts/BEP20Token.sol\":9906:9916  _msgSender */\n      tag_78\n        /* \"contracts/BEP20Token.sol\":9906:9918  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/BEP20Token.sol\":9896:9902  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/BEP20Token.sol\":9896:9918  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/BEP20Token.sol\":9888:9955  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/BEP20Token.sol\":10387:10388  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":10371:10377  _owner */\n      dup1\n      sload\n        /* \"contracts/BEP20Token.sol\":10350:10390  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":10371:10377  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/BEP20Token.sol\":10350:10390  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/BEP20Token.sol\":10387:10388  0 */\n      dup4\n      swap1\n        /* \"contracts/BEP20Token.sol\":10350:10390  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"contracts/BEP20Token.sol\":10413:10414  0 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":10396:10415  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"contracts/BEP20Token.sol\":10293:10420  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":11582:11659  function getOwner() external view returns (address) {... */\n    tag_47:\n        /* \"contracts/BEP20Token.sol\":11625:11632  address */\n      0x00\n        /* \"contracts/BEP20Token.sol\":11647:11654  owner() */\n      tag_102\n        /* \"contracts/BEP20Token.sol\":11647:11652  owner */\n      tag_49\n        /* \"contracts/BEP20Token.sol\":11647:11654  owner() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/BEP20Token.sol\":11640:11654  return owner() */\n      swap1\n      pop\n        /* \"contracts/BEP20Token.sol\":11582:11659  function getOwner() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":9710:9781  function owner() public view returns (address) {... */\n    tag_49:\n        /* \"contracts/BEP20Token.sol\":9748:9755  address */\n      0x00\n        /* \"contracts/BEP20Token.sol\":9770:9776  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/BEP20Token.sol\":9710:9781  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":11842:11923  function symbol() external view returns (string memory) {... */\n    tag_51:\n        /* \"contracts/BEP20Token.sol\":11911:11918  _symbol */\n      0x05\n        /* \"contracts/BEP20Token.sol\":11904:11918  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"contracts/BEP20Token.sol\":11883:11896  string memory */\n      0x60\n      swap4\n        /* \"contracts/BEP20Token.sol\":11904:11918  return _symbol */\n      swap1\n      swap3\n        /* \"contracts/BEP20Token.sol\":11911:11918  _symbol */\n      swap1\n      swap2\n        /* \"contracts/BEP20Token.sol\":11904:11918  return _symbol */\n      dup4\n      add\n        /* \"contracts/BEP20Token.sol\":11911:11918  _symbol */\n      dup3\n        /* \"contracts/BEP20Token.sol\":11904:11918  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_72\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_73\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_72)\n        /* \"contracts/BEP20Token.sol\":15285:15402  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n    tag_58:\n        /* \"contracts/BEP20Token.sol\":15341:15345  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":9906:9918  _msgSender() */\n      tag_109\n        /* \"contracts/BEP20Token.sol\":9906:9916  _msgSender */\n      tag_78\n        /* \"contracts/BEP20Token.sol\":9906:9918  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/BEP20Token.sol\":9896:9902  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/BEP20Token.sol\":9896:9918  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/BEP20Token.sol\":9888:9955  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_110\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/BEP20Token.sol\":15353:15380  _mint(_msgSender(), amount) */\n      tag_112\n        /* \"contracts/BEP20Token.sol\":15359:15371  _msgSender() */\n      tag_113\n        /* \"contracts/BEP20Token.sol\":15359:15369  _msgSender */\n      tag_78\n        /* \"contracts/BEP20Token.sol\":15359:15371  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"contracts/BEP20Token.sol\":15373:15379  amount */\n      dup4\n        /* \"contracts/BEP20Token.sol\":15353:15358  _mint */\n      tag_114\n        /* \"contracts/BEP20Token.sol\":15353:15380  _mint(_msgSender(), amount) */\n      jump\t// in\n    tag_112:\n      pop\n        /* \"contracts/BEP20Token.sol\":15393:15397  true */\n      0x01\n        /* \"contracts/BEP20Token.sol\":15285:15402  function mint(uint256 amount) public onlyOwner returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":14847:15095  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_61:\n        /* \"contracts/BEP20Token.sol\":14932:14936  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":14944:15073  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")) */\n      tag_76\n        /* \"contracts/BEP20Token.sol\":14953:14965  _msgSender() */\n      tag_117\n        /* \"contracts/BEP20Token.sol\":14953:14963  _msgSender */\n      tag_78\n        /* \"contracts/BEP20Token.sol\":14953:14965  _msgSender() */\n      jump\t// in\n    tag_117:\n        /* \"contracts/BEP20Token.sol\":14967:14974  spender */\n      dup5\n        /* \"contracts/BEP20Token.sol\":14976:15072  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      tag_86\n        /* \"contracts/BEP20Token.sol\":15015:15030  subtractedValue */\n      dup6\n        /* \"contracts/BEP20Token.sol\":14976:15072  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22\n      0x25\n      swap2\n      codecopy\n        /* \"contracts/BEP20Token.sol\":14976:14987  _allowances */\n      0x02\n        /* \"contracts/BEP20Token.sol\":14976:15001  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/BEP20Token.sol\":14988:15000  _msgSender() */\n      tag_119\n        /* \"contracts/BEP20Token.sol\":14988:14998  _msgSender */\n      tag_78\n        /* \"contracts/BEP20Token.sol\":14988:15000  _msgSender() */\n      jump\t// in\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":14976:15001  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/BEP20Token.sol\":14976:15010  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/BEP20Token.sol\":14976:15072  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      swap1\n      0xffffffff\n        /* \"contracts/BEP20Token.sol\":14976:15014  _allowances[_msgSender()][spender].sub */\n      tag_88\n        /* \"contracts/BEP20Token.sol\":14976:15072  _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\") */\n      and\n      jump\t// in\n        /* \"contracts/BEP20Token.sol\":12521:12668  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_64:\n        /* \"contracts/BEP20Token.sol\":12592:12596  bool */\n      0x00\n        /* \"contracts/BEP20Token.sol\":12604:12646  _transfer(_msgSender(), recipient, amount) */\n      tag_76\n        /* \"contracts/BEP20Token.sol\":12614:12626  _msgSender() */\n      tag_122\n        /* \"contracts/BEP20Token.sol\":12614:12624  _msgSender */\n      tag_78\n        /* \"contracts/BEP20Token.sol\":12614:12626  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/BEP20Token.sol\":12628:12637  recipient */\n      dup5\n        /* \"contracts/BEP20Token.sol\":12639:12645  amount */\n      dup5\n        /* \"contracts/BEP20Token.sol\":12604:12613  _transfer */\n      tag_83\n        /* \"contracts/BEP20Token.sol\":12604:12646  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"contracts/BEP20Token.sol\":12717:12845  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":12813:12831  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/BEP20Token.sol\":12791:12798  uint256 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":12813:12831  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20Token.sol\":12813:12824  _allowances */\n      0x02\n        /* \"contracts/BEP20Token.sol\":12813:12831  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/BEP20Token.sol\":12813:12840  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/BEP20Token.sol\":12717:12845  function allowance(address owner, address spender) external view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":10559:10660  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_70:\n        /* \"contracts/BEP20Token.sol\":9906:9918  _msgSender() */\n      tag_125\n        /* \"contracts/BEP20Token.sol\":9906:9916  _msgSender */\n      tag_78\n        /* \"contracts/BEP20Token.sol\":9906:9918  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/BEP20Token.sol\":9896:9902  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/BEP20Token.sol\":9896:9918  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"contracts/BEP20Token.sol\":9888:9955  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_126\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_126:\n        /* \"contracts/BEP20Token.sol\":10627:10655  _transferOwnership(newOwner) */\n      tag_128\n        /* \"contracts/BEP20Token.sol\":10646:10654  newOwner */\n      dup2\n        /* \"contracts/BEP20Token.sol\":10627:10645  _transferOwnership */\n      tag_129\n        /* \"contracts/BEP20Token.sol\":10627:10655  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_128:\n        /* \"contracts/BEP20Token.sol\":10559:10660  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":3595:3685  function _msgSender() internal view returns (address payable) {... */\n    tag_78:\n        /* \"contracts/BEP20Token.sol\":3670:3680  msg.sender */\n      caller\n        /* \"contracts/BEP20Token.sol\":3595:3685  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":17838:18152  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":17927:17946  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/BEP20Token.sol\":17919:17987  require(owner != address(0), \"BEP20: approve from the zero address\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":18001:18022  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/BEP20Token.sol\":17993:18061  require(spender != address(0), \"BEP20: approve to the zero address\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":18068:18086  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BEP20Token.sol\":18068:18079  _allowances */\n      0x02\n        /* \"contracts/BEP20Token.sol\":18068:18086  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/BEP20Token.sol\":18068:18095  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/BEP20Token.sol\":18068:18104  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/BEP20Token.sol\":18115:18147  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/BEP20Token.sol\":17838:18152  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":15846:16288  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":15939:15959  sender != address(0) */\n      dup4\n      and\n        /* \"contracts/BEP20Token.sol\":15931:16001  require(sender != address(0), \"BEP20: transfer from the zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":16015:16038  recipient != address(0) */\n      dup3\n      and\n        /* \"contracts/BEP20Token.sol\":16007:16078  require(recipient != address(0), \"BEP20: transfer to the zero address\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/BEP20Token.sol\":16105:16176  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      tag_137\n        /* \"contracts/BEP20Token.sol\":16127:16133  amount */\n      dup2\n        /* \"contracts/BEP20Token.sol\":16105:16176  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":16105:16122  _balances[sender] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20Token.sol\":16105:16114  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":16105:16122  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"contracts/BEP20Token.sol\":16105:16176  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap1\n      0xffffffff\n        /* \"contracts/BEP20Token.sol\":16105:16126  _balances[sender].sub */\n      tag_88\n        /* \"contracts/BEP20Token.sol\":16105:16176  _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      and\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":16085:16102  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20Token.sol\":16085:16094  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":16085:16102  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/BEP20Token.sol\":16085:16176  _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/BEP20Token.sol\":16205:16225  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":16205:16237  _balances[recipient].add(amount) */\n      tag_138\n      swap1\n        /* \"contracts/BEP20Token.sol\":16230:16236  amount */\n      dup3\n        /* \"contracts/BEP20Token.sol\":16205:16237  _balances[recipient].add(amount) */\n      0xffffffff\n        /* \"contracts/BEP20Token.sol\":16205:16229  _balances[recipient].add */\n      tag_95\n        /* \"contracts/BEP20Token.sol\":16205:16237  _balances[recipient].add(amount) */\n      and\n      jump\t// in\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":16182:16202  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BEP20Token.sol\":16182:16191  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":16182:16202  _balances[recipient] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/BEP20Token.sol\":16182:16237  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/BEP20Token.sol\":16248:16283  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/BEP20Token.sol\":16182:16202  _balances[recipient] */\n      swap2\n      swap4\n        /* \"contracts/BEP20Token.sol\":16248:16283  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/BEP20Token.sol\":15846:16288  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":5492:5665  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_88:\n        /* \"contracts/BEP20Token.sol\":5578:5585  uint256 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":5609:5621  errorMessage */\n      dup2\n        /* \"contracts/BEP20Token.sol\":5601:5607  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"contracts/BEP20Token.sol\":5593:5622  require(b <= a, errorMessage) */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_141:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_143\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_141)\n    tag_143:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/BEP20Token.sol\":5593:5622  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_144\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_144:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n      pop\n      pop\n      pop\n        /* \"contracts/BEP20Token.sol\":5640:5645  a - b */\n      swap1\n      sub\n      swap1\n        /* \"contracts/BEP20Token.sol\":5492:5665  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":4694:4856  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_95:\n        /* \"contracts/BEP20Token.sol\":4752:4759  uint256 */\n      0x00\n        /* \"contracts/BEP20Token.sol\":4779:4784  a + b */\n      dup3\n      dup3\n      add\n        /* \"contracts/BEP20Token.sol\":4798:4804  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"contracts/BEP20Token.sol\":4790:4836  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_146\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/BEP20Token.sol\":4850:4851  c */\n      swap4\n        /* \"contracts/BEP20Token.sol\":4694:4856  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":16538:16822  function _mint(address account, uint256 amount) internal {... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":16609:16630  account != address(0) */\n      dup3\n      and\n        /* \"contracts/BEP20Token.sol\":16601:16666  require(account != address(0), \"BEP20: mint to the zero address\") */\n      tag_148\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x42455032303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_148:\n        /* \"contracts/BEP20Token.sol\":16688:16700  _totalSupply */\n      sload(0x03)\n        /* \"contracts/BEP20Token.sol\":16688:16712  _totalSupply.add(amount) */\n      tag_149\n      swap1\n        /* \"contracts/BEP20Token.sol\":16705:16711  amount */\n      dup3\n        /* \"contracts/BEP20Token.sol\":16688:16712  _totalSupply.add(amount) */\n      0xffffffff\n        /* \"contracts/BEP20Token.sol\":16688:16704  _totalSupply.add */\n      tag_95\n        /* \"contracts/BEP20Token.sol\":16688:16712  _totalSupply.add(amount) */\n      and\n      jump\t// in\n    tag_149:\n        /* \"contracts/BEP20Token.sol\":16673:16685  _totalSupply */\n      0x03\n        /* \"contracts/BEP20Token.sol\":16673:16712  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":16739:16757  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/BEP20Token.sol\":16739:16748  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":16739:16757  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/BEP20Token.sol\":16739:16769  _balances[account].add(amount) */\n      tag_150\n      swap1\n        /* \"contracts/BEP20Token.sol\":16762:16768  amount */\n      dup3\n        /* \"contracts/BEP20Token.sol\":16739:16769  _balances[account].add(amount) */\n      0xffffffff\n        /* \"contracts/BEP20Token.sol\":16739:16761  _balances[account].add */\n      tag_95\n        /* \"contracts/BEP20Token.sol\":16739:16769  _balances[account].add(amount) */\n      and\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":16718:16736  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/BEP20Token.sol\":16718:16727  _balances */\n      0x01\n        /* \"contracts/BEP20Token.sol\":16718:16736  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/BEP20Token.sol\":16718:16769  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/BEP20Token.sol\":16780:16817  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"contracts/BEP20Token.sol\":16718:16736  _balances[account] */\n      swap3\n      swap4\n      swap2\n      swap3\n        /* \"contracts/BEP20Token.sol\":16780:16817  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/BEP20Token.sol\":16538:16822  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BEP20Token.sol\":10753:10964  function _transferOwnership(address newOwner) internal {... */\n    tag_129:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/BEP20Token.sol\":10822:10844  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/BEP20Token.sol\":10814:10887  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/BEP20Token.sol\":10919:10925  _owner */\n      0x00\n      dup1\n      sload\n        /* \"contracts/BEP20Token.sol\":10898:10936  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"contracts/BEP20Token.sol\":10919:10925  _owner */\n      swap3\n      and\n      swap2\n        /* \"contracts/BEP20Token.sol\":10898:10936  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"contracts/BEP20Token.sol\":10942:10948  _owner */\n      0x00\n        /* \"contracts/BEP20Token.sol\":10942:10959  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/BEP20Token.sol\":10753:10964  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n    stop\n    data_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57 42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4 42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e 42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73 42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2 42455032303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22 42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5 42455032303a20617070726f766520746f20746865207a65726f2061646472657373\n\n    auxdata: 0xa265627a7a72315820053dfed67b8c396d60d5ce7ed80c9608fac17672ea8be71016138a12e36f9a8464736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060006100246001600160e01b0361013616565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060408051808201909152600980825268109b1bd8dadc9bd85960ba1b602090920191825261009e9160069161013b565b5060408051808201909152600580825264424c4f434b60d81b60209092019182526100c9918161013b565b506004805460ff191660121790556a084595161401484a0000006003819055336000818152600160209081526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a36101d3565b335b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061017c57805160ff19168380011785556101a9565b828001600101855582156101a9579182015b828111156101a957825182559160200191906001019061018e565b506101b59291506101b9565b5090565b61013891905b808211156101b557600081556001016101bf565b610e56806101e26000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102dd578063a9059cbb14610309578063dd62ed3e14610335578063f2fde38b1461036357610100565b8063893d20e81461028c5780638da5cb5b146102b057806395d89b41146102b8578063a0712d68146102c057610100565b8063313ce567116100d3578063313ce56714610212578063395093511461023057806370a082311461025c578063715018a61461028257610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d610389565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561041f565b604080519115158252519081900360200190f35b6101ca61043c565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610442565b61021a6104cf565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561024657600080fd5b506001600160a01b0381351690602001356104d8565b6101ca6004803603602081101561027257600080fd5b50356001600160a01b031661052c565b61028a610547565b005b6102946105fb565b604080516001600160a01b039092168252519081900360200190f35b61029461060a565b61010d610619565b6101ae600480360360208110156102d657600080fd5b503561067a565b6101ae600480360360408110156102f357600080fd5b506001600160a01b0381351690602001356106ff565b6101ae6004803603604081101561031f57600080fd5b506001600160a01b03813516906020013561076d565b6101ca6004803603604081101561034b57600080fd5b506001600160a01b0381358116916020013516610781565b61028a6004803603602081101561037957600080fd5b50356001600160a01b03166107ac565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104155780601f106103ea57610100808354040283529160200191610415565b820191906000526020600020905b8154815290600101906020018083116103f857829003601f168201915b5050505050905090565b600061043361042c610822565b8484610826565b50600192915050565b60035490565b600061044f848484610912565b6104c58461045b610822565b6104c085604051806060016040528060288152602001610d6a602891396001600160a01b038a16600090815260026020526040812090610499610822565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610a7016565b610826565b5060019392505050565b60045460ff1690565b60006104336104e5610822565b846104c085600260006104f6610822565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610b0716565b6001600160a01b031660009081526001602052604090205490565b61054f610822565b6000546001600160a01b039081169116146105b1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600061060561060a565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104155780601f106103ea57610100808354040283529160200191610415565b6000610684610822565b6000546001600160a01b039081169116146106e6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106f76106f1610822565b83610b68565b506001919050565b600061043361070c610822565b846104c085604051806060016040528060258152602001610ddb6025913960026000610736610822565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610a7016565b600061043361077a610822565b8484610912565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6107b4610822565b6000546001600160a01b03908116911614610816576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61081f81610c5a565b50565b3390565b6001600160a01b03831661086b5760405162461bcd60e51b8152600401808060200182810382526024815260200180610d206024913960400191505060405180910390fd5b6001600160a01b0382166108b05760405162461bcd60e51b8152600401808060200182810382526022815260200180610e006022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109575760405162461bcd60e51b8152600401808060200182810382526025815260200180610cfb6025913960400191505060405180910390fd5b6001600160a01b03821661099c5760405162461bcd60e51b8152600401808060200182810382526023815260200180610db86023913960400191505060405180910390fd5b6109df81604051806060016040528060268152602001610d92602691396001600160a01b038616600090815260016020526040902054919063ffffffff610a7016565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610a14908263ffffffff610b0716565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610aff5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ac4578181015183820152602001610aac565b50505050905090810190601f168015610af15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610b61576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610bc3576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600354610bd6908263ffffffff610b0716565b6003556001600160a01b038216600090815260016020526040902054610c02908263ffffffff610b0716565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610c9f5760405162461bcd60e51b8152600401808060200182810382526026815260200180610d446026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a72315820053dfed67b8c396d60d5ce7ed80c9608fac17672ea8be71016138a12e36f9a8464736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x24 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH2 0x136 AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x9 DUP1 DUP3 MSTORE PUSH9 0x109B1BD8DADC9BD859 PUSH1 0xBA SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0x9E SWAP2 PUSH1 0x6 SWAP2 PUSH2 0x13B JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP1 DUP3 MSTORE PUSH5 0x424C4F434B PUSH1 0xD8 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH2 0xC9 SWAP2 DUP2 PUSH2 0x13B JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH11 0x84595161401484A000000 PUSH1 0x3 DUP2 SWAP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH2 0x1D3 JUMP JUMPDEST CALLER JUMPDEST SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x17C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1A9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1A9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1A9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x18E JUMP JUMPDEST POP PUSH2 0x1B5 SWAP3 SWAP2 POP PUSH2 0x1B9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x138 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1BF JUMP JUMPDEST PUSH2 0xE56 DUP1 PUSH2 0x1E2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2C0 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x147 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x174 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x442 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x52C JUMP JUMPDEST PUSH2 0x28A PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x619 JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x67A JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6FF JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x76D JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x781 JUMP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x42C PUSH2 0x822 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x826 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44F DUP5 DUP5 DUP5 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x4C5 DUP5 PUSH2 0x45B PUSH2 0x822 JUMP JUMPDEST PUSH2 0x4C0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x499 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x4E5 PUSH2 0x822 JUMP JUMPDEST DUP5 PUSH2 0x4C0 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x4F6 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x5B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x605 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x6E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6F7 PUSH2 0x6F1 PUSH2 0x822 JUMP JUMPDEST DUP4 PUSH2 0xB68 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x70C PUSH2 0x822 JUMP JUMPDEST DUP5 PUSH2 0x4C0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDDB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x736 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x77A PUSH2 0x822 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x912 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x816 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x81F DUP2 PUSH2 0xC5A JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD20 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE00 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCFB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDB8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD92 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA14 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAC4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAAC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xAF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB61 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xBD6 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC02 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD44 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A72315820053DFED67B8C39 PUSH14 0x60D5CE7ED80C9608FAC17672EA8B 0xE7 LT AND SGT DUP11 SLT 0xE3 PUSH16 0x9A8464736F6C63430005100032000000 ",
							"sourceMap": "10968:7569:0:-;;;11286:241;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9527:17:0;9547:12;-1:-1:-1;;;;;9547:10:0;:12;:::i;:::-;9565:6;:18;;-1:-1:-1;;;;;;9565:18:0;-1:-1:-1;;;;;9565:18:0;;;;;;;9594:43;;9565:18;;-1:-1:-1;9565:18:0;9594:43;;9565:6;;9594:43;-1:-1:-1;11313:19:0;;;;;;;;;;;;;-1:-1:-1;;;11313:19:0;;;;;;;;;:5;;:19;:::i;:::-;-1:-1:-1;11338:17:0;;;;;;;;;;;;;-1:-1:-1;;;11338:17:0;;;;;;;;;;;:::i;:::-;-1:-1:-1;11361:9:0;:14;;-1:-1:-1;;11361:14:0;11373:2;11361:14;;;11396:26;11381:12;:41;;;11438:10;11361:9;11428:21;;;11361:14;11428:21;;;;;;;;:36;;;11476:46;;;;;;11438:10;;11361:9;;11476:46;;;;;;;;;;10968:7569;;3595:90;3670:10;3595:90;;:::o;10968:7569::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10968:7569:0;;;-1:-1:-1;10968:7569:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c8063893d20e811610097578063a457c2d711610066578063a457c2d7146102dd578063a9059cbb14610309578063dd62ed3e14610335578063f2fde38b1461036357610100565b8063893d20e81461028c5780638da5cb5b146102b057806395d89b41146102b8578063a0712d68146102c057610100565b8063313ce567116100d3578063313ce56714610212578063395093511461023057806370a082311461025c578063715018a61461028257610100565b806306fdde0314610105578063095ea7b31461018257806318160ddd146101c257806323b872dd146101dc575b600080fd5b61010d610389565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101ae6004803603604081101561019857600080fd5b506001600160a01b03813516906020013561041f565b604080519115158252519081900360200190f35b6101ca61043c565b60408051918252519081900360200190f35b6101ae600480360360608110156101f257600080fd5b506001600160a01b03813581169160208101359091169060400135610442565b61021a6104cf565b6040805160ff9092168252519081900360200190f35b6101ae6004803603604081101561024657600080fd5b506001600160a01b0381351690602001356104d8565b6101ca6004803603602081101561027257600080fd5b50356001600160a01b031661052c565b61028a610547565b005b6102946105fb565b604080516001600160a01b039092168252519081900360200190f35b61029461060a565b61010d610619565b6101ae600480360360208110156102d657600080fd5b503561067a565b6101ae600480360360408110156102f357600080fd5b506001600160a01b0381351690602001356106ff565b6101ae6004803603604081101561031f57600080fd5b506001600160a01b03813516906020013561076d565b6101ca6004803603604081101561034b57600080fd5b506001600160a01b0381358116916020013516610781565b61028a6004803603602081101561037957600080fd5b50356001600160a01b03166107ac565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104155780601f106103ea57610100808354040283529160200191610415565b820191906000526020600020905b8154815290600101906020018083116103f857829003601f168201915b5050505050905090565b600061043361042c610822565b8484610826565b50600192915050565b60035490565b600061044f848484610912565b6104c58461045b610822565b6104c085604051806060016040528060288152602001610d6a602891396001600160a01b038a16600090815260026020526040812090610499610822565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610a7016565b610826565b5060019392505050565b60045460ff1690565b60006104336104e5610822565b846104c085600260006104f6610822565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610b0716565b6001600160a01b031660009081526001602052604090205490565b61054f610822565b6000546001600160a01b039081169116146105b1576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600061060561060a565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104155780601f106103ea57610100808354040283529160200191610415565b6000610684610822565b6000546001600160a01b039081169116146106e6576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6106f76106f1610822565b83610b68565b506001919050565b600061043361070c610822565b846104c085604051806060016040528060258152602001610ddb6025913960026000610736610822565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610a7016565b600061043361077a610822565b8484610912565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6107b4610822565b6000546001600160a01b03908116911614610816576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61081f81610c5a565b50565b3390565b6001600160a01b03831661086b5760405162461bcd60e51b8152600401808060200182810382526024815260200180610d206024913960400191505060405180910390fd5b6001600160a01b0382166108b05760405162461bcd60e51b8152600401808060200182810382526022815260200180610e006022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109575760405162461bcd60e51b8152600401808060200182810382526025815260200180610cfb6025913960400191505060405180910390fd5b6001600160a01b03821661099c5760405162461bcd60e51b8152600401808060200182810382526023815260200180610db86023913960400191505060405180910390fd5b6109df81604051806060016040528060268152602001610d92602691396001600160a01b038616600090815260016020526040902054919063ffffffff610a7016565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610a14908263ffffffff610b0716565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610aff5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ac4578181015183820152602001610aac565b50505050905090810190601f168015610af15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610b61576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610bc3576040805162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600354610bd6908263ffffffff610b0716565b6003556001600160a01b038216600090815260016020526040902054610c02908263ffffffff610b0716565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038116610c9f5760405162461bcd60e51b8152600401808060200182810382526026815260200180610d446026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a265627a7a72315820053dfed67b8c396d60d5ce7ed80c9608fac17672ea8be71016138a12e36f9a8464736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x893D20E8 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x363 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x2C0 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x147 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x174 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x442 JUMP JUMPDEST PUSH2 0x21A PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x52C JUMP JUMPDEST PUSH2 0x28A PUSH2 0x547 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x294 PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x294 PUSH2 0x60A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x619 JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x67A JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6FF JUMP JUMPDEST PUSH2 0x1AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x76D JUMP JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x34B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x781 JUMP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x42C PUSH2 0x822 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x826 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44F DUP5 DUP5 DUP5 PUSH2 0x912 JUMP JUMPDEST PUSH2 0x4C5 DUP5 PUSH2 0x45B PUSH2 0x822 JUMP JUMPDEST PUSH2 0x4C0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD6A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x499 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH2 0x826 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x4E5 PUSH2 0x822 JUMP JUMPDEST DUP5 PUSH2 0x4C0 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x4F6 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x54F PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x5B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x605 PUSH2 0x60A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x415 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3EA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x415 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x684 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x6E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x6F7 PUSH2 0x6F1 PUSH2 0x822 JUMP JUMPDEST DUP4 PUSH2 0xB68 JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x70C PUSH2 0x822 JUMP JUMPDEST DUP5 PUSH2 0x4C0 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDDB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x736 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433 PUSH2 0x77A PUSH2 0x822 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x912 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x816 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x81F DUP2 PUSH2 0xC5A JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD20 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xE00 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x957 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xCFB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xDB8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9DF DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD92 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xA70 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xA14 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xAFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAC4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAAC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xAF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB61 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42455032303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xBD6 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC02 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0xB07 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xD44 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A265627A7A72315820053DFED67B8C39 PUSH14 0x60D5CE7ED80C9608FAC17672EA8B 0xE7 LT AND SGT DUP11 SLT 0xE3 PUSH16 0x9A8464736F6C63430005100032000000 ",
							"sourceMap": "10968:7569:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10968:7569:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11971:77;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11971:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12966:141;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12966:141:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;12099:85;;;:::i;:::-;;;;;;;;;;;;;;;;13538:288;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;13538:288:0;;;;;;;;;;;;;;;;;:::i;11713:77::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;14194:197;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14194:197:0;;;;;;;;:::i;12233:104::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12233:104:0;-1:-1:-1;;;;;12233:104:0;;:::i;10293:127::-;;;:::i;:::-;;11582:77;;;:::i;:::-;;;;-1:-1:-1;;;;;11582:77:0;;;;;;;;;;;;;;9710:71;;;:::i;11842:81::-;;;:::i;15285:117::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15285:117:0;;:::i;14847:248::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14847:248:0;;;;;;;;:::i;12521:147::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12521:147:0;;;;;;;;:::i;12717:128::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;12717:128:0;;;;;;;;;;:::i;10559:101::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10559:101:0;-1:-1:-1;;;;;10559:101:0;;:::i;11971:77::-;12038:5;12031:12;;;;;;;;-1:-1:-1;;12031:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12010:13;;12031:12;;12038:5;;12031:12;;12038:5;12031:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11971:77;:::o;12966:141::-;13034:4;13046:39;13055:12;:10;:12::i;:::-;13069:7;13078:6;13046:8;:39::i;:::-;-1:-1:-1;13098:4:0;12966:141;;;;:::o;12099:85::-;12167:12;;12099:85;:::o;13538:288::-;13629:4;13641:36;13651:6;13659:9;13670:6;13641:9;:36::i;:::-;13683:121;13692:6;13700:12;:10;:12::i;:::-;13714:89;13752:6;13714:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13714:19:0;;;;;;:11;:19;;;;;;13734:12;:10;:12::i;:::-;-1:-1:-1;;;;;13714:33:0;;;;;;;;;;;;-1:-1:-1;13714:33:0;;;:89;;:37;:89;:::i;:::-;13683:8;:121::i;:::-;-1:-1:-1;13817:4:0;13538:288;;;;;:::o;11713:77::-;11776:9;;;;11713:77;:::o;14194:197::-;14274:4;14286:83;14295:12;:10;:12::i;:::-;14309:7;14318:50;14357:10;14318:11;:25;14330:12;:10;:12::i;:::-;-1:-1:-1;;;;;14318:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;14318:25:0;;;:34;;;;;;;;;;;:50;:38;:50;:::i;12233:104::-;-1:-1:-1;;;;;12314:18:0;12292:7;12314:18;;;:9;:18;;;;;;;12233:104::o;10293:127::-;9906:12;:10;:12::i;:::-;9896:6;;-1:-1:-1;;;;;9896:6:0;;;:22;;;9888:67;;;;;-1:-1:-1;;;9888:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10387:1;10371:6;;10350:40;;-1:-1:-1;;;;;10371:6:0;;;;10350:40;;10387:1;;10350:40;10413:1;10396:19;;-1:-1:-1;;;;;;10396:19:0;;;10293:127::o;11582:77::-;11625:7;11647;:5;:7::i;:::-;11640:14;;11582:77;:::o;9710:71::-;9748:7;9770:6;-1:-1:-1;;;;;9770:6:0;9710:71;:::o;11842:81::-;11911:7;11904:14;;;;;;;;-1:-1:-1;;11904:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11883:13;;11904:14;;11911:7;;11904:14;;11911:7;11904:14;;;;;;;;;;;;;;;;;;;;;;;;15285:117;15341:4;9906:12;:10;:12::i;:::-;9896:6;;-1:-1:-1;;;;;9896:6:0;;;:22;;;9888:67;;;;;-1:-1:-1;;;9888:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15353:27;15359:12;:10;:12::i;:::-;15373:6;15353:5;:27::i;:::-;-1:-1:-1;15393:4:0;15285:117;;;:::o;14847:248::-;14932:4;14944:129;14953:12;:10;:12::i;:::-;14967:7;14976:96;15015:15;14976:96;;;;;;;;;;;;;;;;;:11;:25;14988:12;:10;:12::i;:::-;-1:-1:-1;;;;;14976:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;14976:25:0;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;12521:147::-;12592:4;12604:42;12614:12;:10;:12::i;:::-;12628:9;12639:6;12604:9;:42::i;12717:128::-;-1:-1:-1;;;;;12813:18:0;;;12791:7;12813:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;12717:128::o;10559:101::-;9906:12;:10;:12::i;:::-;9896:6;;-1:-1:-1;;;;;9896:6:0;;;:22;;;9888:67;;;;;-1:-1:-1;;;9888:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10627:28;10646:8;10627:18;:28::i;:::-;10559:101;:::o;3595:90::-;3670:10;3595:90;:::o;17838:314::-;-1:-1:-1;;;;;17927:19:0;;17919:68;;;;-1:-1:-1;;;17919:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18001:21:0;;17993:68;;;;-1:-1:-1;;;17993:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18068:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;18115:32;;;;;;;;;;;;;;;;;17838:314;;;:::o;15846:442::-;-1:-1:-1;;;;;15939:20:0;;15931:70;;;;-1:-1:-1;;;15931:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16015:23:0;;16007:71;;;;-1:-1:-1;;;16007:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16105;16127:6;16105:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16105:17:0;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;16085:17:0;;;;;;;:9;:17;;;;;;:91;;;;16205:20;;;;;;;:32;;16230:6;16205:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;16182:20:0;;;;;;;:9;:20;;;;;;;;;:55;;;;16248:35;;;;;;;16182:20;;16248:35;;;;;;;;;;;;;15846:442;;;:::o;5492:173::-;5578:7;5609:12;5601:6;;;;5593:29;;;;-1:-1:-1;;;5593:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5593:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5640:5:0;;;5492:173::o;4694:162::-;4752:7;4779:5;;;4798:6;;;;4790:46;;;;;-1:-1:-1;;;4790:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4850:1;4694:162;-1:-1:-1;;;4694:162:0:o;16538:284::-;-1:-1:-1;;;;;16609:21:0;;16601:65;;;;;-1:-1:-1;;;16601:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;16688:12;;:24;;16705:6;16688:24;:16;:24;:::i;:::-;16673:12;:39;-1:-1:-1;;;;;16739:18:0;;;;;;:9;:18;;;;;;:30;;16762:6;16739:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;16718:18:0;;;;;;:9;:18;;;;;;;;:51;;;;16780:37;;;;;;;16718:18;;;;16780:37;;;;;;;;;;16538:284;;:::o;10753:211::-;-1:-1:-1;;;;;10822:22:0;;10814:73;;;;-1:-1:-1;;;10814:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10919:6;;;10898:38;;-1:-1:-1;;;;;10898:38:0;;;;10919:6;;;10898:38;;;10942:6;:17;;-1:-1:-1;;;;;;10942:17:0;-1:-1:-1;;;;;10942:17:0;;;;;;;;;;10753:211::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "734000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1316",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1209",
								"decimals()": "1036",
								"decreaseAllowance(address,uint256)": "infinite",
								"getOwner()": "1095",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1082",
								"renounceOwnership()": "24293",
								"symbol()": "infinite",
								"totalSupply()": "1066",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "MSTORE"
								},
								{
									"begin": 11286,
									"end": 11527,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9527,
									"end": 9544,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 9547,
									"end": 9557,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "AND"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 9547,
									"end": 9559,
									"name": "JUMPDEST"
								},
								{
									"begin": 9565,
									"end": 9571,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "DUP1"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "AND"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "DUP4"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "AND"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SWAP1"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "DUP2"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "OR"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "DUP3"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SSTORE"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "MLOAD"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SWAP3"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SWAP4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 9565,
									"end": 9583,
									"name": "SWAP2"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "SWAP1"
								},
								{
									"begin": 9565,
									"end": 9571,
									"name": "DUP3"
								},
								{
									"begin": 9565,
									"end": 9571,
									"name": "SWAP1"
								},
								{
									"begin": 9594,
									"end": 9637,
									"name": "LOG3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "DUP1"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "MLOAD"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "DUP1"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "DUP3"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "ADD"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "SWAP1"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "SWAP2"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "MSTORE"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "DUP1"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "DUP3"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "109B1BD8DADC9BD859"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "BA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "SWAP1"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "SWAP3"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "ADD"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "SWAP2"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "DUP3"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "MSTORE"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "SWAP2"
								},
								{
									"begin": 11313,
									"end": 11318,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 11313,
									"end": 11318,
									"name": "SWAP2"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 11313,
									"end": 11332,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "DUP1"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "MLOAD"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "DUP1"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "DUP3"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "ADD"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "SWAP1"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "SWAP2"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "MSTORE"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "DUP1"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "DUP3"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "424C4F434B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "SWAP1"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "SWAP3"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "ADD"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "SWAP2"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "DUP3"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "MSTORE"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "SWAP2"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "DUP2"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11338,
									"end": 11355,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 11361,
									"end": 11370,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11361,
									"end": 11375,
									"name": "DUP1"
								},
								{
									"begin": 11361,
									"end": 11375,
									"name": "SLOAD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT"
								},
								{
									"begin": 11361,
									"end": 11375,
									"name": "AND"
								},
								{
									"begin": 11373,
									"end": 11375,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 11361,
									"end": 11375,
									"name": "OR"
								},
								{
									"begin": 11361,
									"end": 11375,
									"name": "SWAP1"
								},
								{
									"begin": 11361,
									"end": 11375,
									"name": "SSTORE"
								},
								{
									"begin": 11396,
									"end": 11422,
									"name": "PUSH",
									"value": "84595161401484A000000"
								},
								{
									"begin": 11381,
									"end": 11393,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 11381,
									"end": 11422,
									"name": "DUP2"
								},
								{
									"begin": 11381,
									"end": 11422,
									"name": "SWAP1"
								},
								{
									"begin": 11381,
									"end": 11422,
									"name": "SSTORE"
								},
								{
									"begin": 11438,
									"end": 11448,
									"name": "CALLER"
								},
								{
									"begin": 11361,
									"end": 11370,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11428,
									"end": 11449,
									"name": "DUP2"
								},
								{
									"begin": 11428,
									"end": 11449,
									"name": "DUP2"
								},
								{
									"begin": 11428,
									"end": 11449,
									"name": "MSTORE"
								},
								{
									"begin": 11361,
									"end": 11375,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 11428,
									"end": 11449,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11428,
									"end": 11449,
									"name": "SWAP1"
								},
								{
									"begin": 11428,
									"end": 11449,
									"name": "DUP2"
								},
								{
									"begin": 11428,
									"end": 11449,
									"name": "MSTORE"
								},
								{
									"begin": 11428,
									"end": 11449,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11428,
									"end": 11449,
									"name": "DUP1"
								},
								{
									"begin": 11428,
									"end": 11449,
									"name": "DUP4"
								},
								{
									"begin": 11428,
									"end": 11449,
									"name": "KECCAK256"
								},
								{
									"begin": 11428,
									"end": 11464,
									"name": "DUP6"
								},
								{
									"begin": 11428,
									"end": 11464,
									"name": "SWAP1"
								},
								{
									"begin": 11428,
									"end": 11464,
									"name": "SSTORE"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "DUP1"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "MLOAD"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "SWAP5"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "DUP6"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "MSTORE"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "MLOAD"
								},
								{
									"begin": 11438,
									"end": 11448,
									"name": "SWAP3"
								},
								{
									"begin": 11438,
									"end": 11448,
									"name": "SWAP4"
								},
								{
									"begin": 11361,
									"end": 11370,
									"name": "SWAP2"
								},
								{
									"begin": 11361,
									"end": 11370,
									"name": "SWAP3"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "SWAP3"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "DUP2"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "SWAP1"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "SUB"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "SWAP1"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "SWAP2"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "ADD"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "SWAP1"
								},
								{
									"begin": 11476,
									"end": 11522,
									"name": "LOG3"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMP"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "JUMPDEST"
								},
								{
									"begin": 3670,
									"end": 3680,
									"name": "CALLER"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "JUMPDEST"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "SWAP1"
								},
								{
									"begin": 3595,
									"end": 3685,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SLOAD"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP2"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "AND"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "ISZERO"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "MUL"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SUB"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "AND"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DIV"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "MSTORE"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "KECCAK256"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DIV"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP2"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SWAP3"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "LT"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMPI"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "MLOAD"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "NOT"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "AND"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP4"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "OR"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP6"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SSTORE"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMP"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP6"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SSTORE"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "ISZERO"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMPI"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SWAP2"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP2"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "GT"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "ISZERO"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMPI"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "MLOAD"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SSTORE"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SWAP2"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SWAP2"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMP"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SWAP3"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SWAP2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "POP"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SWAP2"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SWAP1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP3"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "GT"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "ISZERO"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMPI"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP2"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "SSTORE"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "ADD"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMP"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "JUMPDEST"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "DUP1"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "CODECOPY"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 10968,
									"end": 18537,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820053dfed67b8c396d60d5ce7ed80c9608fac17672ea8be71016138a12e36f9a8464736f6c63430005100032",
									".code": [
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "MSTORE"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "POP"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "LT"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "SHR"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "GT"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "GT"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMP"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPDEST"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "893D20E8"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "A0712D68"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMP"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPDEST"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "GT"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMP"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPDEST"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "EQ"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPI"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "JUMPDEST"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "DUP1"
										},
										{
											"begin": 10968,
											"end": 18537,
											"name": "REVERT"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "JUMPDEST"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "JUMPDEST"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP1"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "MLOAD"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP1"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP3"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "MSTORE"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP4"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "MLOAD"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP2"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP4"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "ADD"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "MSTORE"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP4"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "MLOAD"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SWAP2"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SWAP3"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP4"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SWAP3"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SWAP1"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP4"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "ADD"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SWAP2"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP6"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "ADD"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SWAP1"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP1"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP4"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP4"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "POP"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "POP"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "POP"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SWAP1"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "POP"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SWAP1"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP2"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "ADD"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SWAP1"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "AND"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP1"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "ISZERO"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "JUMPI"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP1"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP3"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SUB"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP1"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "MLOAD"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP4"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SUB"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "EXP"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SUB"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "NOT"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "AND"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP2"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "MSTORE"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "ADD"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SWAP2"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "POP"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "JUMPDEST"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "POP"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SWAP3"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "POP"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "POP"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "POP"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "MLOAD"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "DUP1"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SWAP2"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SUB"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SWAP1"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "RETURN"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "JUMPDEST"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "DUP1"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "DUP2"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "AND"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "SWAP1"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "ADD"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "JUMPDEST"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "DUP1"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "MLOAD"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "SWAP2"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "ISZERO"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "ISZERO"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "DUP3"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "MSTORE"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "MLOAD"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "SWAP1"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "DUP2"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "SWAP1"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "SUB"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "ADD"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "SWAP1"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "RETURN"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "JUMPDEST"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "JUMPDEST"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "DUP1"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "MLOAD"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "SWAP2"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "DUP3"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "MSTORE"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "MLOAD"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "SWAP1"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "DUP2"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "SWAP1"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "SUB"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "ADD"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "SWAP1"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "RETURN"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "JUMPDEST"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "DUP1"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "DUP2"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "DUP2"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "AND"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "SWAP2"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "DUP2"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "ADD"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "SWAP1"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "SWAP2"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "AND"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "SWAP1"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "ADD"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "JUMPDEST"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "JUMPDEST"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "DUP1"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "MLOAD"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "SWAP1"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "SWAP3"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "AND"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "DUP3"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "MSTORE"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "MLOAD"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "SWAP1"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "DUP2"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "SWAP1"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "SUB"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "ADD"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "SWAP1"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "RETURN"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "JUMPDEST"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "DUP1"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "DUP2"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "AND"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "SWAP1"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "ADD"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12233,
											"end": 12337,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 12233,
											"end": 12337,
											"name": "JUMPDEST"
										},
										{
											"begin": 12233,
											"end": 12337,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 12233,
											"end": 12337,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12233,
											"end": 12337,
											"name": "DUP1"
										},
										{
											"begin": 12233,
											"end": 12337,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12233,
											"end": 12337,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 12233,
											"end": 12337,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12233,
											"end": 12337,
											"name": "AND"
										},
										{
											"begin": 12233,
											"end": 12337,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 12233,
											"end": 12337,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "JUMPDEST"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "JUMPDEST"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "STOP"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "JUMPDEST"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "JUMPDEST"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "DUP1"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "SWAP1"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "SWAP3"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "AND"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "DUP3"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "MSTORE"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "MLOAD"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "SWAP1"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "DUP2"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "SWAP1"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "SUB"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "ADD"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "SWAP1"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "RETURN"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "JUMPDEST"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11842,
											"end": 11923,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 11842,
											"end": 11923,
											"name": "JUMPDEST"
										},
										{
											"begin": 11842,
											"end": 11923,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 11842,
											"end": 11923,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 11842,
											"end": 11923,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "JUMPDEST"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "DUP1"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "JUMPDEST"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "DUP1"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "DUP2"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "AND"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "SWAP1"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "ADD"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "JUMPDEST"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "DUP1"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "DUP2"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "AND"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "SWAP1"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "ADD"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "JUMPDEST"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "DUP1"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "DUP2"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "DUP2"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "AND"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "SWAP2"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "ADD"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "AND"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "JUMPDEST"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "DUP1"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "AND"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "JUMPDEST"
										},
										{
											"begin": 12038,
											"end": 12043,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SLOAD"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "MLOAD"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP9"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "AND"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "ISZERO"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "MUL"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "ADD"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP6"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "AND"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP5"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP5"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DIV"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP4"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP5"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "ADD"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP2"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DIV"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP2"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "MUL"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP3"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "ADD"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP2"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "ADD"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP3"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "MSTORE"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP3"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP2"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "MSTORE"
										},
										{
											"begin": 12010,
											"end": 12023,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 12010,
											"end": 12023,
											"name": "SWAP4"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP3"
										},
										{
											"begin": 12038,
											"end": 12043,
											"name": "SWAP1"
										},
										{
											"begin": 12038,
											"end": 12043,
											"name": "SWAP2"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP4"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "ADD"
										},
										{
											"begin": 12038,
											"end": 12043,
											"name": "DUP3"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP3"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "ISZERO"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "JUMPI"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "LT"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "JUMPI"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP4"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SLOAD"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DIV"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "MUL"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP4"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "MSTORE"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP2"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "ADD"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP2"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "JUMP"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "JUMPDEST"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP3"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "ADD"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP2"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "MSTORE"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "KECCAK256"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "JUMPDEST"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP2"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SLOAD"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP2"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "MSTORE"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "ADD"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "ADD"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP4"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "GT"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "JUMPI"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP3"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SUB"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "AND"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "DUP3"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "ADD"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP2"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "JUMPDEST"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "POP"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "POP"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "POP"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "POP"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "POP"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "SWAP1"
										},
										{
											"begin": 12031,
											"end": 12043,
											"name": "POP"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "SWAP1"
										},
										{
											"begin": 11971,
											"end": 12048,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "JUMPDEST"
										},
										{
											"begin": 13034,
											"end": 13038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13046,
											"end": 13085,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 13055,
											"end": 13067,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 13055,
											"end": 13065,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 13055,
											"end": 13067,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13055,
											"end": 13067,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 13055,
											"end": 13067,
											"name": "JUMPDEST"
										},
										{
											"begin": 13069,
											"end": 13076,
											"name": "DUP5"
										},
										{
											"begin": 13078,
											"end": 13084,
											"name": "DUP5"
										},
										{
											"begin": 13046,
											"end": 13054,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 13046,
											"end": 13085,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13046,
											"end": 13085,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 13046,
											"end": 13085,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13098,
											"end": 13102,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "SWAP3"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "SWAP2"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "POP"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "POP"
										},
										{
											"begin": 12966,
											"end": 13107,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "JUMPDEST"
										},
										{
											"begin": 12167,
											"end": 12179,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 12167,
											"end": 12179,
											"name": "SLOAD"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "SWAP1"
										},
										{
											"begin": 12099,
											"end": 12184,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "JUMPDEST"
										},
										{
											"begin": 13629,
											"end": 13633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13641,
											"end": 13677,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 13651,
											"end": 13657,
											"name": "DUP5"
										},
										{
											"begin": 13659,
											"end": 13668,
											"name": "DUP5"
										},
										{
											"begin": 13670,
											"end": 13676,
											"name": "DUP5"
										},
										{
											"begin": 13641,
											"end": 13650,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 13641,
											"end": 13677,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13641,
											"end": 13677,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 13641,
											"end": 13677,
											"name": "JUMPDEST"
										},
										{
											"begin": 13683,
											"end": 13804,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 13692,
											"end": 13698,
											"name": "DUP5"
										},
										{
											"begin": 13700,
											"end": 13712,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 13700,
											"end": 13710,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 13700,
											"end": 13712,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13700,
											"end": 13712,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 13700,
											"end": 13712,
											"name": "JUMPDEST"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 13752,
											"end": 13758,
											"name": "DUP6"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "MLOAD"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "DUP1"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "ADD"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "MSTORE"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "DUP1"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "DUP2"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "MSTORE"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "ADD"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "PUSH data",
											"value": "4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "SWAP2"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13714,
											"end": 13733,
											"name": "DUP11"
										},
										{
											"begin": 13714,
											"end": 13733,
											"name": "AND"
										},
										{
											"begin": 13714,
											"end": 13733,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13714,
											"end": 13733,
											"name": "SWAP1"
										},
										{
											"begin": 13714,
											"end": 13733,
											"name": "DUP2"
										},
										{
											"begin": 13714,
											"end": 13733,
											"name": "MSTORE"
										},
										{
											"begin": 13714,
											"end": 13725,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 13714,
											"end": 13733,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13714,
											"end": 13733,
											"name": "MSTORE"
										},
										{
											"begin": 13714,
											"end": 13733,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13714,
											"end": 13733,
											"name": "DUP2"
										},
										{
											"begin": 13714,
											"end": 13733,
											"name": "KECCAK256"
										},
										{
											"begin": 13714,
											"end": 13733,
											"name": "SWAP1"
										},
										{
											"begin": 13734,
											"end": 13746,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 13734,
											"end": 13744,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 13734,
											"end": 13746,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13734,
											"end": 13746,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 13734,
											"end": 13746,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 13714,
											"end": 13747,
											"name": "AND"
										},
										{
											"begin": 13714,
											"end": 13747,
											"name": "DUP2"
										},
										{
											"begin": 13714,
											"end": 13747,
											"name": "MSTORE"
										},
										{
											"begin": 13714,
											"end": 13747,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13714,
											"end": 13747,
											"name": "DUP2"
										},
										{
											"begin": 13714,
											"end": 13747,
											"name": "ADD"
										},
										{
											"begin": 13714,
											"end": 13747,
											"name": "SWAP2"
										},
										{
											"begin": 13714,
											"end": 13747,
											"name": "SWAP1"
										},
										{
											"begin": 13714,
											"end": 13747,
											"name": "SWAP2"
										},
										{
											"begin": 13714,
											"end": 13747,
											"name": "MSTORE"
										},
										{
											"begin": 13714,
											"end": 13747,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 13714,
											"end": 13747,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13714,
											"end": 13747,
											"name": "KECCAK256"
										},
										{
											"begin": 13714,
											"end": 13747,
											"name": "SLOAD"
										},
										{
											"begin": 13714,
											"end": 13747,
											"name": "SWAP2"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "SWAP1"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 13714,
											"end": 13751,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "AND"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 13714,
											"end": 13803,
											"name": "JUMPDEST"
										},
										{
											"begin": 13683,
											"end": 13691,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 13683,
											"end": 13804,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 13683,
											"end": 13804,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 13683,
											"end": 13804,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 13817,
											"end": 13821,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "SWAP4"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "SWAP3"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "POP"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "POP"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "POP"
										},
										{
											"begin": 13538,
											"end": 13826,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "JUMPDEST"
										},
										{
											"begin": 11776,
											"end": 11785,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 11776,
											"end": 11785,
											"name": "SLOAD"
										},
										{
											"begin": 11776,
											"end": 11785,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 11776,
											"end": 11785,
											"name": "AND"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "SWAP1"
										},
										{
											"begin": 11713,
											"end": 11790,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 14194,
											"end": 14391,
											"name": "JUMPDEST"
										},
										{
											"begin": 14274,
											"end": 14278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14286,
											"end": 14369,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 14295,
											"end": 14307,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 14295,
											"end": 14305,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14295,
											"end": 14307,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14295,
											"end": 14307,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 14295,
											"end": 14307,
											"name": "JUMPDEST"
										},
										{
											"begin": 14309,
											"end": 14316,
											"name": "DUP5"
										},
										{
											"begin": 14318,
											"end": 14368,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 14357,
											"end": 14367,
											"name": "DUP6"
										},
										{
											"begin": 14318,
											"end": 14329,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14330,
											"end": 14342,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 14330,
											"end": 14340,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14330,
											"end": 14342,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14330,
											"end": 14342,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 14330,
											"end": 14342,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "SWAP1"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "DUP2"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "AND"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "DUP3"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "MSTORE"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "DUP1"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "DUP4"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "ADD"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "SWAP4"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "SWAP1"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "SWAP4"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "MSTORE"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "SWAP2"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "DUP3"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "SWAP1"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "DUP2"
										},
										{
											"begin": 14318,
											"end": 14343,
											"name": "KECCAK256"
										},
										{
											"begin": 14318,
											"end": 14352,
											"name": "SWAP2"
										},
										{
											"begin": 14318,
											"end": 14352,
											"name": "DUP13"
										},
										{
											"begin": 14318,
											"end": 14352,
											"name": "AND"
										},
										{
											"begin": 14318,
											"end": 14352,
											"name": "DUP2"
										},
										{
											"begin": 14318,
											"end": 14352,
											"name": "MSTORE"
										},
										{
											"begin": 14318,
											"end": 14352,
											"name": "SWAP3"
										},
										{
											"begin": 14318,
											"end": 14352,
											"name": "MSTORE"
										},
										{
											"begin": 14318,
											"end": 14352,
											"name": "SWAP1"
										},
										{
											"begin": 14318,
											"end": 14352,
											"name": "KECCAK256"
										},
										{
											"begin": 14318,
											"end": 14352,
											"name": "SLOAD"
										},
										{
											"begin": 14318,
											"end": 14352,
											"name": "SWAP1"
										},
										{
											"begin": 14318,
											"end": 14368,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14318,
											"end": 14356,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 14318,
											"end": 14368,
											"name": "AND"
										},
										{
											"begin": 14318,
											"end": 14368,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12233,
											"end": 12337,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 12233,
											"end": 12337,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "AND"
										},
										{
											"begin": 12292,
											"end": 12299,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "SWAP1"
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "DUP2"
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "MSTORE"
										},
										{
											"begin": 12314,
											"end": 12323,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "MSTORE"
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "SWAP1"
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "KECCAK256"
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "SLOAD"
										},
										{
											"begin": 12314,
											"end": 12332,
											"name": "SWAP1"
										},
										{
											"begin": 12233,
											"end": 12337,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "JUMPDEST"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 9906,
											"end": 9916,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMPDEST"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SWAP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "DUP2"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "SWAP2"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "EQ"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPI"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SUB"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "REVERT"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPDEST"
										},
										{
											"begin": 10387,
											"end": 10388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "DUP1"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "SLOAD"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "SWAP1"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "SWAP2"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "AND"
										},
										{
											"begin": 10371,
											"end": 10377,
											"name": "SWAP1"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "SWAP1"
										},
										{
											"begin": 10387,
											"end": 10388,
											"name": "DUP4"
										},
										{
											"begin": 10387,
											"end": 10388,
											"name": "SWAP1"
										},
										{
											"begin": 10350,
											"end": 10390,
											"name": "LOG3"
										},
										{
											"begin": 10413,
											"end": 10414,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "DUP1"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "AND"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "SWAP1"
										},
										{
											"begin": 10396,
											"end": 10415,
											"name": "SSTORE"
										},
										{
											"begin": 10293,
											"end": 10420,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "JUMPDEST"
										},
										{
											"begin": 11625,
											"end": 11632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 11647,
											"end": 11654,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 11647,
											"end": 11652,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 11647,
											"end": 11654,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 11647,
											"end": 11654,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 11647,
											"end": 11654,
											"name": "JUMPDEST"
										},
										{
											"begin": 11640,
											"end": 11654,
											"name": "SWAP1"
										},
										{
											"begin": 11640,
											"end": 11654,
											"name": "POP"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "SWAP1"
										},
										{
											"begin": 11582,
											"end": 11659,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "JUMPDEST"
										},
										{
											"begin": 9748,
											"end": 9755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9770,
											"end": 9776,
											"name": "AND"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "SWAP1"
										},
										{
											"begin": 9710,
											"end": 9781,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 11842,
											"end": 11923,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 11842,
											"end": 11923,
											"name": "JUMPDEST"
										},
										{
											"begin": 11911,
											"end": 11918,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP1"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "SLOAD"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP1"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "MLOAD"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP9"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "AND"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "ISZERO"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "MUL"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "ADD"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "SWAP1"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "SWAP6"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "AND"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "SWAP5"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "SWAP1"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "SWAP5"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DIV"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "SWAP4"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP5"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "ADD"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP2"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "SWAP1"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DIV"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP2"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "MUL"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP3"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "ADD"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP2"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "ADD"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "SWAP1"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "SWAP3"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "MSTORE"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP3"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP2"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "MSTORE"
										},
										{
											"begin": 11883,
											"end": 11896,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 11883,
											"end": 11896,
											"name": "SWAP4"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "SWAP1"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "SWAP3"
										},
										{
											"begin": 11911,
											"end": 11918,
											"name": "SWAP1"
										},
										{
											"begin": 11911,
											"end": 11918,
											"name": "SWAP2"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP4"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "ADD"
										},
										{
											"begin": 11911,
											"end": 11918,
											"name": "DUP3"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP3"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP1"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "ISZERO"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "JUMPI"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP1"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "LT"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "JUMPI"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP1"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP4"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "SLOAD"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DIV"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "MUL"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "DUP4"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "MSTORE"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "SWAP2"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "ADD"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "SWAP2"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 11904,
											"end": 11918,
											"name": "JUMP"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "JUMPDEST"
										},
										{
											"begin": 15341,
											"end": 15345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 9906,
											"end": 9916,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMPDEST"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SWAP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "DUP2"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "SWAP2"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "EQ"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPI"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SUB"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "REVERT"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPDEST"
										},
										{
											"begin": 15353,
											"end": 15380,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 15359,
											"end": 15371,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 15359,
											"end": 15369,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 15359,
											"end": 15371,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15359,
											"end": 15371,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 15359,
											"end": 15371,
											"name": "JUMPDEST"
										},
										{
											"begin": 15373,
											"end": 15379,
											"name": "DUP4"
										},
										{
											"begin": 15353,
											"end": 15358,
											"name": "PUSH [tag]",
											"value": "114"
										},
										{
											"begin": 15353,
											"end": 15380,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 15353,
											"end": 15380,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 15353,
											"end": 15380,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 15393,
											"end": 15397,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "SWAP2"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "SWAP1"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "POP"
										},
										{
											"begin": 15285,
											"end": 15402,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 14847,
											"end": 15095,
											"name": "JUMPDEST"
										},
										{
											"begin": 14932,
											"end": 14936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14944,
											"end": 15073,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 14953,
											"end": 14965,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 14953,
											"end": 14963,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14953,
											"end": 14965,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14953,
											"end": 14965,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 14953,
											"end": 14965,
											"name": "JUMPDEST"
										},
										{
											"begin": 14967,
											"end": 14974,
											"name": "DUP5"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 15015,
											"end": 15030,
											"name": "DUP6"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "MLOAD"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "DUP1"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "ADD"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "MSTORE"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "DUP1"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "DUP2"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "MSTORE"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "ADD"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "PUSH data",
											"value": "B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "SWAP2"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "CODECOPY"
										},
										{
											"begin": 14976,
											"end": 14987,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14988,
											"end": 15000,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 14988,
											"end": 14998,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 14988,
											"end": 15000,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 14988,
											"end": 15000,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 14988,
											"end": 15000,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "SWAP1"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "DUP2"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "AND"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "DUP3"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "MSTORE"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "DUP1"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "DUP4"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "ADD"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "SWAP4"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "SWAP1"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "SWAP4"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "MSTORE"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "SWAP2"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "DUP3"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "SWAP1"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "DUP2"
										},
										{
											"begin": 14976,
											"end": 15001,
											"name": "KECCAK256"
										},
										{
											"begin": 14976,
											"end": 15010,
											"name": "SWAP2"
										},
										{
											"begin": 14976,
											"end": 15010,
											"name": "DUP14"
										},
										{
											"begin": 14976,
											"end": 15010,
											"name": "AND"
										},
										{
											"begin": 14976,
											"end": 15010,
											"name": "DUP2"
										},
										{
											"begin": 14976,
											"end": 15010,
											"name": "MSTORE"
										},
										{
											"begin": 14976,
											"end": 15010,
											"name": "SWAP3"
										},
										{
											"begin": 14976,
											"end": 15010,
											"name": "MSTORE"
										},
										{
											"begin": 14976,
											"end": 15010,
											"name": "SWAP1"
										},
										{
											"begin": 14976,
											"end": 15010,
											"name": "KECCAK256"
										},
										{
											"begin": 14976,
											"end": 15010,
											"name": "SLOAD"
										},
										{
											"begin": 14976,
											"end": 15010,
											"name": "SWAP2"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "SWAP1"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 14976,
											"end": 15014,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "AND"
										},
										{
											"begin": 14976,
											"end": 15072,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 12521,
											"end": 12668,
											"name": "JUMPDEST"
										},
										{
											"begin": 12592,
											"end": 12596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12604,
											"end": 12646,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 12614,
											"end": 12626,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 12614,
											"end": 12624,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 12614,
											"end": 12626,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12614,
											"end": 12626,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 12614,
											"end": 12626,
											"name": "JUMPDEST"
										},
										{
											"begin": 12628,
											"end": 12637,
											"name": "DUP5"
										},
										{
											"begin": 12639,
											"end": 12645,
											"name": "DUP5"
										},
										{
											"begin": 12604,
											"end": 12613,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 12604,
											"end": 12646,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "SWAP2"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "DUP3"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "AND"
										},
										{
											"begin": 12791,
											"end": 12798,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "SWAP1"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "DUP2"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "MSTORE"
										},
										{
											"begin": 12813,
											"end": 12824,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "SWAP1"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "DUP2"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "MSTORE"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "DUP1"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "DUP4"
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "KECCAK256"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "SWAP4"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "SWAP1"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "SWAP5"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "AND"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "DUP3"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "MSTORE"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "SWAP2"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "SWAP1"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "SWAP2"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "MSTORE"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "KECCAK256"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "SLOAD"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "SWAP1"
										},
										{
											"begin": 12717,
											"end": 12845,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "JUMPDEST"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 9906,
											"end": 9916,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 9906,
											"end": 9918,
											"name": "JUMPDEST"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "SWAP1"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "DUP2"
										},
										{
											"begin": 9896,
											"end": 9902,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "SWAP2"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "AND"
										},
										{
											"begin": 9896,
											"end": 9918,
											"name": "EQ"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH [tag]",
											"value": "126"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPI"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP3"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MSTORE"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "MLOAD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "DUP2"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SUB"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "ADD"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "SWAP1"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "REVERT"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "tag",
											"value": "126"
										},
										{
											"begin": 9888,
											"end": 9955,
											"name": "JUMPDEST"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 10646,
											"end": 10654,
											"name": "DUP2"
										},
										{
											"begin": 10627,
											"end": 10645,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 10627,
											"end": 10655,
											"name": "JUMPDEST"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "POP"
										},
										{
											"begin": 10559,
											"end": 10660,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3595,
											"end": 3685,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 3595,
											"end": 3685,
											"name": "JUMPDEST"
										},
										{
											"begin": 3670,
											"end": 3680,
											"name": "CALLER"
										},
										{
											"begin": 3595,
											"end": 3685,
											"name": "SWAP1"
										},
										{
											"begin": 3595,
											"end": 3685,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 17838,
											"end": 18152,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 17838,
											"end": 18152,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 17927,
											"end": 17946,
											"name": "DUP4"
										},
										{
											"begin": 17927,
											"end": 17946,
											"name": "AND"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "JUMPI"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "DUP2"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "MSTORE"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "ADD"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "DUP1"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "DUP1"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "ADD"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "DUP3"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "DUP2"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "SUB"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "DUP3"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "MSTORE"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "DUP2"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "MSTORE"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "ADD"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "DUP1"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "PUSH data",
											"value": "1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "SWAP2"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "CODECOPY"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "ADD"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "SWAP2"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "POP"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "POP"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "MLOAD"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "DUP1"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "SWAP2"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "SUB"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "SWAP1"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "REVERT"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 17919,
											"end": 17987,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18001,
											"end": 18022,
											"name": "DUP3"
										},
										{
											"begin": 18001,
											"end": 18022,
											"name": "AND"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "JUMPI"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "DUP2"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "MSTORE"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "ADD"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "DUP1"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "DUP1"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "ADD"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "DUP3"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "DUP2"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "SUB"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "DUP3"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "MSTORE"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "DUP2"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "MSTORE"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "ADD"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "DUP1"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "PUSH data",
											"value": "F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "SWAP2"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "CODECOPY"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "ADD"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "SWAP2"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "POP"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "POP"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "MLOAD"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "DUP1"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "SWAP2"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "SUB"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "SWAP1"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "REVERT"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 17993,
											"end": 18061,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "DUP1"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "DUP5"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "AND"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "DUP2"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "DUP2"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "MSTORE"
										},
										{
											"begin": 18068,
											"end": 18079,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "SWAP1"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "DUP2"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "MSTORE"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "DUP1"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "DUP4"
										},
										{
											"begin": 18068,
											"end": 18086,
											"name": "KECCAK256"
										},
										{
											"begin": 18068,
											"end": 18095,
											"name": "SWAP5"
										},
										{
											"begin": 18068,
											"end": 18095,
											"name": "DUP8"
										},
										{
											"begin": 18068,
											"end": 18095,
											"name": "AND"
										},
										{
											"begin": 18068,
											"end": 18095,
											"name": "DUP1"
										},
										{
											"begin": 18068,
											"end": 18095,
											"name": "DUP5"
										},
										{
											"begin": 18068,
											"end": 18095,
											"name": "MSTORE"
										},
										{
											"begin": 18068,
											"end": 18095,
											"name": "SWAP5"
										},
										{
											"begin": 18068,
											"end": 18095,
											"name": "DUP3"
										},
										{
											"begin": 18068,
											"end": 18095,
											"name": "MSTORE"
										},
										{
											"begin": 18068,
											"end": 18095,
											"name": "SWAP2"
										},
										{
											"begin": 18068,
											"end": 18095,
											"name": "DUP3"
										},
										{
											"begin": 18068,
											"end": 18095,
											"name": "SWAP1"
										},
										{
											"begin": 18068,
											"end": 18095,
											"name": "KECCAK256"
										},
										{
											"begin": 18068,
											"end": 18104,
											"name": "DUP6"
										},
										{
											"begin": 18068,
											"end": 18104,
											"name": "SWAP1"
										},
										{
											"begin": 18068,
											"end": 18104,
											"name": "SSTORE"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "DUP2"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "MLOAD"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "DUP6"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "DUP2"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "MSTORE"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "SWAP2"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "MLOAD"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "SWAP3"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "DUP2"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "SWAP1"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "SUB"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "SWAP1"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "SWAP2"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "ADD"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "SWAP1"
										},
										{
											"begin": 18115,
											"end": 18147,
											"name": "LOG3"
										},
										{
											"begin": 17838,
											"end": 18152,
											"name": "POP"
										},
										{
											"begin": 17838,
											"end": 18152,
											"name": "POP"
										},
										{
											"begin": 17838,
											"end": 18152,
											"name": "POP"
										},
										{
											"begin": 17838,
											"end": 18152,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 15846,
											"end": 16288,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 15846,
											"end": 16288,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 15939,
											"end": 15959,
											"name": "DUP4"
										},
										{
											"begin": 15939,
											"end": 15959,
											"name": "AND"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "JUMPI"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "DUP2"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "MSTORE"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "ADD"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "DUP1"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "DUP1"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "ADD"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "DUP3"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "DUP2"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "SUB"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "DUP3"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "MSTORE"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "DUP2"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "MSTORE"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "ADD"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "DUP1"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "PUSH data",
											"value": "D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "SWAP2"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "CODECOPY"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "ADD"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "SWAP2"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "POP"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "POP"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "MLOAD"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "DUP1"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "SWAP2"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "SUB"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "SWAP1"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "REVERT"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 15931,
											"end": 16001,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16015,
											"end": 16038,
											"name": "DUP3"
										},
										{
											"begin": 16015,
											"end": 16038,
											"name": "AND"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "JUMPI"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "DUP2"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "MSTORE"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "ADD"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "DUP1"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "DUP1"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "ADD"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "DUP3"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "DUP2"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "SUB"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "DUP3"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "MSTORE"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "DUP2"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "MSTORE"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "ADD"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "DUP1"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "PUSH data",
											"value": "ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "SWAP2"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "CODECOPY"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "ADD"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "SWAP2"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "POP"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "POP"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "MLOAD"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "DUP1"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "SWAP2"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "SUB"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "SWAP1"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "REVERT"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 16007,
											"end": 16078,
											"name": "JUMPDEST"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 16127,
											"end": 16133,
											"name": "DUP2"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "MLOAD"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "DUP1"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "ADD"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "MSTORE"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "DUP1"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "DUP2"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "MSTORE"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "ADD"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "PUSH data",
											"value": "A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "SWAP2"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "CODECOPY"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16105,
											"end": 16122,
											"name": "DUP7"
										},
										{
											"begin": 16105,
											"end": 16122,
											"name": "AND"
										},
										{
											"begin": 16105,
											"end": 16122,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16105,
											"end": 16122,
											"name": "SWAP1"
										},
										{
											"begin": 16105,
											"end": 16122,
											"name": "DUP2"
										},
										{
											"begin": 16105,
											"end": 16122,
											"name": "MSTORE"
										},
										{
											"begin": 16105,
											"end": 16114,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16105,
											"end": 16122,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16105,
											"end": 16122,
											"name": "MSTORE"
										},
										{
											"begin": 16105,
											"end": 16122,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16105,
											"end": 16122,
											"name": "SWAP1"
										},
										{
											"begin": 16105,
											"end": 16122,
											"name": "KECCAK256"
										},
										{
											"begin": 16105,
											"end": 16122,
											"name": "SLOAD"
										},
										{
											"begin": 16105,
											"end": 16122,
											"name": "SWAP2"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "SWAP1"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16105,
											"end": 16126,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "AND"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 16105,
											"end": 16176,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16085,
											"end": 16102,
											"name": "DUP1"
										},
										{
											"begin": 16085,
											"end": 16102,
											"name": "DUP6"
										},
										{
											"begin": 16085,
											"end": 16102,
											"name": "AND"
										},
										{
											"begin": 16085,
											"end": 16102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16085,
											"end": 16102,
											"name": "SWAP1"
										},
										{
											"begin": 16085,
											"end": 16102,
											"name": "DUP2"
										},
										{
											"begin": 16085,
											"end": 16102,
											"name": "MSTORE"
										},
										{
											"begin": 16085,
											"end": 16094,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16085,
											"end": 16102,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16085,
											"end": 16102,
											"name": "MSTORE"
										},
										{
											"begin": 16085,
											"end": 16102,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16085,
											"end": 16102,
											"name": "DUP1"
										},
										{
											"begin": 16085,
											"end": 16102,
											"name": "DUP3"
										},
										{
											"begin": 16085,
											"end": 16102,
											"name": "KECCAK256"
										},
										{
											"begin": 16085,
											"end": 16176,
											"name": "SWAP4"
										},
										{
											"begin": 16085,
											"end": 16176,
											"name": "SWAP1"
										},
										{
											"begin": 16085,
											"end": 16176,
											"name": "SWAP4"
										},
										{
											"begin": 16085,
											"end": 16176,
											"name": "SSTORE"
										},
										{
											"begin": 16205,
											"end": 16225,
											"name": "SWAP1"
										},
										{
											"begin": 16205,
											"end": 16225,
											"name": "DUP5"
										},
										{
											"begin": 16205,
											"end": 16225,
											"name": "AND"
										},
										{
											"begin": 16205,
											"end": 16225,
											"name": "DUP2"
										},
										{
											"begin": 16205,
											"end": 16225,
											"name": "MSTORE"
										},
										{
											"begin": 16205,
											"end": 16225,
											"name": "KECCAK256"
										},
										{
											"begin": 16205,
											"end": 16225,
											"name": "SLOAD"
										},
										{
											"begin": 16205,
											"end": 16237,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 16205,
											"end": 16237,
											"name": "SWAP1"
										},
										{
											"begin": 16230,
											"end": 16236,
											"name": "DUP3"
										},
										{
											"begin": 16205,
											"end": 16237,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16205,
											"end": 16229,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 16205,
											"end": 16237,
											"name": "AND"
										},
										{
											"begin": 16205,
											"end": 16237,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16205,
											"end": 16237,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 16205,
											"end": 16237,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "DUP1"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "DUP5"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "AND"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "DUP2"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "DUP2"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "MSTORE"
										},
										{
											"begin": 16182,
											"end": 16191,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "SWAP1"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "DUP2"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "MSTORE"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "SWAP2"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "DUP3"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "SWAP1"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "KECCAK256"
										},
										{
											"begin": 16182,
											"end": 16237,
											"name": "SWAP5"
										},
										{
											"begin": 16182,
											"end": 16237,
											"name": "SWAP1"
										},
										{
											"begin": 16182,
											"end": 16237,
											"name": "SWAP5"
										},
										{
											"begin": 16182,
											"end": 16237,
											"name": "SSTORE"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "DUP1"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "MLOAD"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "DUP6"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "DUP2"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "MSTORE"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "SWAP1"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "MLOAD"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "SWAP2"
										},
										{
											"begin": 16182,
											"end": 16202,
											"name": "SWAP4"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "SWAP3"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "DUP8"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "AND"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "SWAP3"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "SWAP3"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "SWAP2"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "DUP3"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "SWAP1"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "SUB"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "ADD"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "SWAP1"
										},
										{
											"begin": 16248,
											"end": 16283,
											"name": "LOG3"
										},
										{
											"begin": 15846,
											"end": 16288,
											"name": "POP"
										},
										{
											"begin": 15846,
											"end": 16288,
											"name": "POP"
										},
										{
											"begin": 15846,
											"end": 16288,
											"name": "POP"
										},
										{
											"begin": 15846,
											"end": 16288,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5492,
											"end": 5665,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 5492,
											"end": 5665,
											"name": "JUMPDEST"
										},
										{
											"begin": 5578,
											"end": 5585,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5609,
											"end": 5621,
											"name": "DUP2"
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "DUP5"
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "DUP5"
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "GT"
										},
										{
											"begin": 5601,
											"end": 5607,
											"name": "ISZERO"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "JUMPI"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MSTORE"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP3"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SUB"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP3"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MSTORE"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP4"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MLOAD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MSTORE"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MLOAD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP4"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "143"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "AND"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ISZERO"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "JUMPI"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP3"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SUB"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MLOAD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP4"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SUB"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "EXP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SUB"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "NOT"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "AND"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MSTORE"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "ADD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "JUMPDEST"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP3"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "POP"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "MLOAD"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "DUP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP2"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SUB"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "SWAP1"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "REVERT"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 5593,
											"end": 5622,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 5640,
											"end": 5645,
											"name": "SWAP1"
										},
										{
											"begin": 5640,
											"end": 5645,
											"name": "SUB"
										},
										{
											"begin": 5640,
											"end": 5645,
											"name": "SWAP1"
										},
										{
											"begin": 5492,
											"end": 5665,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4694,
											"end": 4856,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 4694,
											"end": 4856,
											"name": "JUMPDEST"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "DUP3"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "DUP3"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "ADD"
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "DUP4"
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "DUP2"
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "LT"
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "ISZERO"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "JUMPI"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP1"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP2"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP3"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP3"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP3"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MSTORE"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "SWAP1"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "MLOAD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "SWAP1"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "DUP2"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "SWAP1"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "SUB"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "ADD"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "SWAP1"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "REVERT"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 4790,
											"end": 4836,
											"name": "JUMPDEST"
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "SWAP4"
										},
										{
											"begin": 4694,
											"end": 4856,
											"name": "SWAP3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4694,
											"end": 4856,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 16538,
											"end": 16822,
											"name": "tag",
											"value": "114"
										},
										{
											"begin": 16538,
											"end": 16822,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16609,
											"end": 16630,
											"name": "DUP3"
										},
										{
											"begin": 16609,
											"end": 16630,
											"name": "AND"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "JUMPI"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "DUP1"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "DUP2"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "MSTORE"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "DUP3"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "ADD"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "MSTORE"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "DUP3"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "ADD"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "MSTORE"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "PUSH",
											"value": "42455032303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "DUP3"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "ADD"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "MSTORE"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "SWAP1"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "MLOAD"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "SWAP1"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "DUP2"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "SWAP1"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "SUB"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "ADD"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "SWAP1"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "REVERT"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 16601,
											"end": 16666,
											"name": "JUMPDEST"
										},
										{
											"begin": 16688,
											"end": 16700,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16688,
											"end": 16700,
											"name": "SLOAD"
										},
										{
											"begin": 16688,
											"end": 16712,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 16688,
											"end": 16712,
											"name": "SWAP1"
										},
										{
											"begin": 16705,
											"end": 16711,
											"name": "DUP3"
										},
										{
											"begin": 16688,
											"end": 16712,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16688,
											"end": 16704,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 16688,
											"end": 16712,
											"name": "AND"
										},
										{
											"begin": 16688,
											"end": 16712,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16688,
											"end": 16712,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 16688,
											"end": 16712,
											"name": "JUMPDEST"
										},
										{
											"begin": 16673,
											"end": 16685,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 16673,
											"end": 16712,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16739,
											"end": 16757,
											"name": "DUP3"
										},
										{
											"begin": 16739,
											"end": 16757,
											"name": "AND"
										},
										{
											"begin": 16739,
											"end": 16757,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16739,
											"end": 16757,
											"name": "SWAP1"
										},
										{
											"begin": 16739,
											"end": 16757,
											"name": "DUP2"
										},
										{
											"begin": 16739,
											"end": 16757,
											"name": "MSTORE"
										},
										{
											"begin": 16739,
											"end": 16748,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16739,
											"end": 16757,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16739,
											"end": 16757,
											"name": "MSTORE"
										},
										{
											"begin": 16739,
											"end": 16757,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16739,
											"end": 16757,
											"name": "SWAP1"
										},
										{
											"begin": 16739,
											"end": 16757,
											"name": "KECCAK256"
										},
										{
											"begin": 16739,
											"end": 16757,
											"name": "SLOAD"
										},
										{
											"begin": 16739,
											"end": 16769,
											"name": "PUSH [tag]",
											"value": "150"
										},
										{
											"begin": 16739,
											"end": 16769,
											"name": "SWAP1"
										},
										{
											"begin": 16762,
											"end": 16768,
											"name": "DUP3"
										},
										{
											"begin": 16739,
											"end": 16769,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 16739,
											"end": 16761,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 16739,
											"end": 16769,
											"name": "AND"
										},
										{
											"begin": 16739,
											"end": 16769,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 16739,
											"end": 16769,
											"name": "tag",
											"value": "150"
										},
										{
											"begin": 16739,
											"end": 16769,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "DUP4"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "AND"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "DUP2"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "DUP2"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "MSTORE"
										},
										{
											"begin": 16718,
											"end": 16727,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "SWAP1"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "DUP2"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "MSTORE"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "DUP1"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "DUP4"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "KECCAK256"
										},
										{
											"begin": 16718,
											"end": 16769,
											"name": "SWAP5"
										},
										{
											"begin": 16718,
											"end": 16769,
											"name": "SWAP1"
										},
										{
											"begin": 16718,
											"end": 16769,
											"name": "SWAP5"
										},
										{
											"begin": 16718,
											"end": 16769,
											"name": "SSTORE"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "DUP4"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "MLOAD"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "DUP6"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "DUP2"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "MSTORE"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "SWAP4"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "MLOAD"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "SWAP3"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "SWAP4"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "SWAP2"
										},
										{
											"begin": 16718,
											"end": 16736,
											"name": "SWAP3"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "SWAP3"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "DUP2"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "SWAP1"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "SUB"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "SWAP1"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "SWAP2"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "ADD"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "SWAP1"
										},
										{
											"begin": 16780,
											"end": 16817,
											"name": "LOG3"
										},
										{
											"begin": 16538,
											"end": 16822,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16822,
											"name": "POP"
										},
										{
											"begin": 16538,
											"end": 16822,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10753,
											"end": 10964,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 10753,
											"end": 10964,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10822,
											"end": 10844,
											"name": "DUP2"
										},
										{
											"begin": 10822,
											"end": 10844,
											"name": "AND"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "JUMPI"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "MSTORE"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "ADD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP1"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP1"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "ADD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP3"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SUB"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP3"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "MSTORE"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "MSTORE"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "ADD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP1"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SWAP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "CODECOPY"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "ADD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SWAP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "POP"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "POP"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "MLOAD"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "DUP1"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SWAP2"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SUB"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "SWAP1"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "REVERT"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 10814,
											"end": 10887,
											"name": "JUMPDEST"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "DUP1"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SLOAD"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "DUP1"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "DUP6"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "AND"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "SWAP4"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SWAP3"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "AND"
										},
										{
											"begin": 10919,
											"end": 10925,
											"name": "SWAP2"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "SWAP2"
										},
										{
											"begin": 10898,
											"end": 10936,
											"name": "LOG3"
										},
										{
											"begin": 10942,
											"end": 10948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "DUP1"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "AND"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP3"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP1"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP3"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "AND"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP2"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP1"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP2"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "OR"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SWAP1"
										},
										{
											"begin": 10942,
											"end": 10959,
											"name": "SSTORE"
										},
										{
											"begin": 10753,
											"end": 10964,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"1441CFBEF485DE93BEDECC35B3D10FA2992DB382C4C9C583A6E423A140ABE4A4": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"4F3506F4BA71C79C3CBD442A3AFEB30E9B27AF2D84E116A4385B34E267D2287E": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A91EFD7A65EF5B4AE4D6568D674798B78A5A89184DD296C100513251C22D3E73": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"ADE9EFCB59E42E439FFE61509B352B1AF56D64CCB68D80B039B7B69578F371D2": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"B7060B3538DCD3DDC8A941C91636A8115A1AA46914747FD9809D543BBB46CD22": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"D26CF302D50B28DE74BE656B11D67092B32131E5712D1BCF08C4E976DACDA57": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"F10E7571E18B354270DEE950932FB6A745EFC79414B2B2556185A4ED6A1AF0D5": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getOwner()": "893d20e8",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(uint256)": "a0712d68",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}.   * Requirements:   * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.   * This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}.   * Emits an {Approval} event indicating the updated allowance.   * Requirements:   * - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply.   * Requirements   * - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}.   * Requirements:   * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}.   * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20};   * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20Token.sol\":\"BEP20Token\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20Token.sol\":{\"keccak256\":\"0x93f6621da28afc37351e59f342a7491a58c8a200caaf13903998a620fcf4af6e\",\"urls\":[\"bzz-raw://82b6d539a233d1970c2a913d9d88a3c19ef4e429fe6580f44465923ee36a8920\",\"dweb:/ipfs/QmNvS4MH9nBrZAgFfVE9hQQvJDNE6qb4FJvvYLZEqZEa1B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/BEP20Token.sol:BEP20Token",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 417,
								"contract": "contracts/BEP20Token.sol:BEP20Token",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 423,
								"contract": "contracts/BEP20Token.sol:BEP20Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 425,
								"contract": "contracts/BEP20Token.sol:BEP20Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 427,
								"contract": "contracts/BEP20Token.sol:BEP20Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 429,
								"contract": "contracts/BEP20Token.sol:BEP20Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 431,
								"contract": "contracts/BEP20Token.sol:BEP20Token",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20Token.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20Token.sol\":{\"keccak256\":\"0x93f6621da28afc37351e59f342a7491a58c8a200caaf13903998a620fcf4af6e\",\"urls\":[\"bzz-raw://82b6d539a233d1970c2a913d9d88a3c19ef4e429fe6580f44465923ee36a8920\",\"dweb:/ipfs/QmNvS4MH9nBrZAgFfVE9hQQvJDNE6qb4FJvvYLZEqZEa1B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"IBEP20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.   * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.   * Returns a boolean value indicating whether the operation succeeded.   * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729   * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.   * Returns a boolean value indicating whether the operation succeeded.   * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20Token.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20Token.sol\":{\"keccak256\":\"0x93f6621da28afc37351e59f342a7491a58c8a200caaf13903998a620fcf4af6e\",\"urls\":[\"bzz-raw://82b6d539a233d1970c2a913d9d88a3c19ef4e429fe6580f44465923ee36a8920\",\"dweb:/ipfs/QmNvS4MH9nBrZAgFfVE9hQQvJDNE6qb4FJvvYLZEqZEa1B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.   * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20Token.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20Token.sol\":{\"keccak256\":\"0x93f6621da28afc37351e59f342a7491a58c8a200caaf13903998a620fcf4af6e\",\"urls\":[\"bzz-raw://82b6d539a233d1970c2a913d9d88a3c19ef4e429fe6580f44465923ee36a8920\",\"dweb:/ipfs/QmNvS4MH9nBrZAgFfVE9hQQvJDNE6qb4FJvvYLZEqZEa1B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "contracts/BEP20Token.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/BEP20Token.sol\":4469:8763  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/BEP20Token.sol\":4469:8763  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820c1d757c8a141107766040253b948ff0db1fda5cc02fc0ead5f6c3b78e419a0ec64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820c1d757c8a141107766040253b948ff0db1fda5cc02fc0ead5f6c3b78e419a0ec64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC1 0xD7 JUMPI 0xC8 LOG1 COINBASE LT PUSH24 0x66040253B948FF0DB1FDA5CC02FC0EAD5F6C3B78E419A0EC PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4469:4294:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820c1d757c8a141107766040253b948ff0db1fda5cc02fc0ead5f6c3b78e419a0ec64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xC1 0xD7 JUMPI 0xC8 LOG1 COINBASE LT PUSH24 0x66040253B948FF0DB1FDA5CC02FC0EAD5F6C3B78E419A0EC PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "4469:4294:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4469,
									"end": 8763,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4469,
									"end": 8763,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820c1d757c8a141107766040253b948ff0db1fda5cc02fc0ead5f6c3b78e419a0ec64736f6c63430005100032",
									".code": [
										{
											"begin": 4469,
											"end": 8763,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "ADDRESS"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "EQ"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "MSTORE"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "DUP1"
										},
										{
											"begin": 4469,
											"end": 8763,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20Token.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BEP20Token.sol\":{\"keccak256\":\"0x93f6621da28afc37351e59f342a7491a58c8a200caaf13903998a620fcf4af6e\",\"urls\":[\"bzz-raw://82b6d539a233d1970c2a913d9d88a3c19ef4e429fe6580f44465923ee36a8920\",\"dweb:/ipfs/QmNvS4MH9nBrZAgFfVE9hQQvJDNE6qb4FJvvYLZEqZEa1B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/BEP20Token.sol": {
				"ast": {
					"absolutePath": "contracts/BEP20Token.sol",
					"exportedSymbols": {
						"BEP20Token": [
							899
						],
						"Context": [
							113
						],
						"IBEP20": [
							88
						],
						"Ownable": [
							404
						],
						"SafeMath": [
							298
						]
					},
					"id": 900,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "IBEP20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "131:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "157:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "156:9:0"
									},
									"scope": 88,
									"src": "111:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token decimals.",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "237:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "263:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 8,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "263:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "262:7:0"
									},
									"scope": 88,
									"src": "220:50:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token symbol.",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "337:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "363:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 13,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "363:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "362:15:0"
									},
									"scope": 88,
									"src": "322:56:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the token name.",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "439:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "465:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 18,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "465:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "464:15:0"
									},
									"scope": 88,
									"src": "426:54:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the bep token owner.",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "552:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "577:9:0"
									},
									"scope": 88,
									"src": "535:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 33,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "681:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "680:17:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "721:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "720:9:0"
									},
									"scope": 88,
									"src": "662:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "952:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "971:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "951:35:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1005:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1005:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1004:6:0"
									},
									"scope": 88,
									"src": "934:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n   * This value changes when {approve} or {transferFrom} are called.",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1289:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1305:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1288:33:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1345:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1344:9:0"
									},
									"scope": 88,
									"src": "1270:84:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   * Emits an {Approval} event.",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1994:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2011:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1993:33:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2045:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 57,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2045:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2044:6:0"
									},
									"scope": 88,
									"src": "1977:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n   * Returns a boolean value indicating whether the operation succeeded.\n   * Emits a {Transfer} event.",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2360:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2360:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2376:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2395:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2359:51:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "2429:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2429:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2428:6:0"
									},
									"scope": 88,
									"src": "2338:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n   * Note that `value` may be zero.",
									"id": 79,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2605:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2605:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2627:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2647:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2604:57:0"
									},
									"src": "2590:72:0"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 87,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2826:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2849:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2874:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2825:63:0"
									},
									"src": "2811:78:0"
								}
							],
							"scope": 900,
							"src": "25:2866:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3588:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3576:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3588:0:0"
									},
									"scope": 113,
									"src": "3564:27:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "3657:28:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 97,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "3670:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3670:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 96,
												"id": 99,
												"nodeType": "Return",
												"src": "3663:17:0"
											}
										]
									},
									"documentation": null,
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3614:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "3640:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3640:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3639:17:0"
									},
									"scope": 113,
									"src": "3595:90:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "3746:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "3752:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$113",
														"typeString": "contract Context"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "3752:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 108,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "3888:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3888:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 105,
												"id": 110,
												"nodeType": "Return",
												"src": "3881:15:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3706:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3732:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3732:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3731:14:0"
									},
									"scope": 113,
									"src": "3689:212:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "3393:510:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "4761:95:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "4767:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4767:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 127,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "4779:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 125,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "4783:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4779:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4767:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 129,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "4798:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "4803:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4806:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "4790:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4790:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 123,
													"src": "4850:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 121,
												"id": 136,
												"nodeType": "Return",
												"src": "4843:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `+` operator.\n   * Requirements:\n- Addition cannot overflow.",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4707:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4718:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4706:22:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "4752:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4751:9:0"
									},
									"scope": 298,
									"src": "4694:162:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "5167:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "5184:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "5187:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5190:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 147,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															154,
															181
														],
														"referencedDeclaration": 181,
														"src": "5180:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5180:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 146,
												"id": 152,
												"nodeType": "Return",
												"src": "5173:50:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5113:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5113:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5124:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5124:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5112:22:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "5158:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5157:9:0"
									},
									"scope": 298,
									"src": "5100:128:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "5587:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "5601:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "5606:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5601:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 169,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "5609:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "5593:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5593:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "5593:29:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "5628:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 177,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 174,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "5640:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "5644:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5640:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5628:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 173,
													"src": "5659:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "5652:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n   * Counterpart to Solidity's `-` operator.\n   * Requirements:\n- Subtraction cannot overflow.",
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5505:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5516:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5516:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5527:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5527:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5504:50:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "5578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5577:9:0"
									},
									"scope": 298,
									"src": "5492:173:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "5952:352:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6168:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6173:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6168:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 196,
												"nodeType": "IfStatement",
												"src": "6164:35:0",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "6176:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6191:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 189,
															"id": 194,
															"nodeType": "Return",
															"src": "6184:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "6205:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6205:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6217:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "6221:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6217:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6205:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 198,
																	"src": "6236:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 205,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "6240:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6236:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 207,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 185,
																"src": "6245:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6236:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6248:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "6228:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6228:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "6228:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 212,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 198,
													"src": "6298:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 189,
												"id": 213,
												"nodeType": "Return",
												"src": "6291:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n   * Counterpart to Solidity's `*` operator.\n   * Requirements:\n- Multiplication cannot overflow.",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5898:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5909:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5897:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5943:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5942:9:0"
									},
									"scope": 298,
									"src": "5885:419:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "6802:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6819:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 219,
															"src": "6822:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6825:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 224,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															231,
															258
														],
														"referencedDeclaration": 258,
														"src": "6815:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6815:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 223,
												"id": 229,
												"nodeType": "Return",
												"src": "6808:46:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6748:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6759:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6747:22:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "6793:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6792:9:0"
									},
									"scope": 298,
									"src": "6735:124:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "7405:221:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "7481:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7485:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7481:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7488:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "7473:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7473:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "7473:28:0"
											},
											{
												"assignments": [
													250
												],
												"declarations": [
													{
														"constant": false,
														"id": 250,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 257,
														"src": "7507:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7507:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 251,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "7519:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 252,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "7523:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7519:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7507:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 255,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 250,
													"src": "7620:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 241,
												"id": 256,
												"nodeType": "Return",
												"src": "7613:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n   * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7323:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7334:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7345:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7345:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7322:50:0"
									},
									"returnParameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "7396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7395:9:0"
									},
									"scope": 298,
									"src": "7310:316:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "8113:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 268,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "8130:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 269,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "8133:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8136:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 267,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															274,
															297
														],
														"referencedDeclaration": 297,
														"src": "8126:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8126:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 266,
												"id": 272,
												"nodeType": "Return",
												"src": "8119:44:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8059:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8070:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8070:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8058:22:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "8104:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8103:9:0"
									},
									"scope": 298,
									"src": "8046:122:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "8703:58:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "8717:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8722:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8717:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 289,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 280,
															"src": "8725:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "8709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8709:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "8709:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8751:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "8755:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8751:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 284,
												"id": 295,
												"nodeType": "Return",
												"src": "8744:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n   * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n   * Requirements:\n- The divisor cannot be zero.",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8621:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8632:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8643:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8643:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8620:50:0"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "8694:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8693:9:0"
									},
									"scope": 298,
									"src": "8608:153:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "4469:4294:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 299,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "9280:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "9280:7:0"
								}
							],
							"contractDependencies": [
								113
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * By default, the owner account will be the one that deploys the contract. This\ncan later be changed with {transferOwnership}.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 404,
							"linearizedBaseContracts": [
								404,
								113
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 404,
									"src": "9292:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9292:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 308,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9346:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9346:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "9377:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9345:57:0"
									},
									"src": "9319:84:0"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "9521:121:0",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 327,
														"src": "9527:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 311,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9527:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "9547:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9547:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9527:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "9565:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 317,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "9574:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9565:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "9565:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9623:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9615:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9615:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "9627:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "9594:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9594:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "EmitStatement",
												"src": "9589:48:0"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9509:2:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9521:0:0"
									},
									"scope": 404,
									"src": "9497:145:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "9757:24:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 333,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "9770:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "9763:13:0"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9724:2:0"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "9748:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9747:9:0"
									},
									"scope": 404,
									"src": "9710:71:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "9882:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "9896:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 340,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 101,
																	"src": "9906:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9906:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9896:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9920:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "9888:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9888:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "9888:67:0"
											},
											{
												"id": 346,
												"nodeType": "PlaceholderStatement",
												"src": "9961:1:0"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 348,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9879:2:0"
									},
									"src": "9861:106:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "10339:81:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 354,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10371:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10387:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10379:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10379:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 353,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10350:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10350:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "EmitStatement",
												"src": "10345:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 360,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10396:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10413:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10405:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10405:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "10396:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "10396:19:0"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n   * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 351,
											"modifierName": {
												"argumentTypes": null,
												"id": 350,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10329:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10329:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10319:2:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10339:0:0"
									},
									"scope": 404,
									"src": "10293:127:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "10621:39:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 375,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "10646:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 374,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "10627:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10627:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "10627:28:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 372,
											"modifierName": {
												"argumentTypes": null,
												"id": 371,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "10611:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10611:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "10586:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10586:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10585:18:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10621:0:0"
									},
									"scope": 404,
									"src": "10559:101:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "10808:156:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 385,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "10822:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10842:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10834:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10834:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10822:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10846:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "10814:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10814:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "10814:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10919:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "10927:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 393,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "10898:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10898:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "EmitStatement",
												"src": "10893:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 398,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "10942:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 399,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "10951:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10942:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "10942:17:0"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "10781:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10780:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10808:0:0"
									},
									"scope": 404,
									"src": "10753:211:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "9260:1706:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 405,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 113,
										"src": "10991:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$113",
											"typeString": "contract Context"
										}
									},
									"id": 406,
									"nodeType": "InheritanceSpecifier",
									"src": "10991:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 407,
										"name": "IBEP20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 88,
										"src": "11000:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$88",
											"typeString": "contract IBEP20"
										}
									},
									"id": 408,
									"nodeType": "InheritanceSpecifier",
									"src": "11000:6:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 409,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 404,
										"src": "11008:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$404",
											"typeString": "contract Ownable"
										}
									},
									"id": 410,
									"nodeType": "InheritanceSpecifier",
									"src": "11008:7:0"
								}
							],
							"contractDependencies": [
								88,
								113,
								404
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 899,
							"linearizedBaseContracts": [
								899,
								404,
								88,
								113
							],
							"name": "BEP20Token",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 413,
									"libraryName": {
										"contractScope": null,
										"id": 411,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 298,
										"src": "11026:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$298",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "11020:27:0",
									"typeName": {
										"id": 412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11039:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 417,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11051:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 416,
										"keyType": {
											"id": 414,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11060:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11051:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 415,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11071:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 423,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11102:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 422,
										"keyType": {
											"id": 418,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "11111:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "11102:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 421,
											"keyType": {
												"id": 419,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11131:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "11122:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11142:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 425,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11176:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "11176:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 427,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11208:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 426,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "11208:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11235:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11235:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 431,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 899,
									"src": "11261:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 430,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "11261:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "11307:220:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 434,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "11313:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "426c6f636b726f6164",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11321:11:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_5c4e7557043ad79d2f50fcfe5638bfa602d3a5f16760ef3c1ae5c6711591bedc",
															"typeString": "literal_string \"Blockroad\""
														},
														"value": "Blockroad"
													},
													"src": "11313:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "11313:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 438,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "11338:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "424c4f434b",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11348:7:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_dcb75e786b18b46d5e92dcb6aca7f3cfdfa0be7241dea9b5fd786755db76ab6f",
															"typeString": "literal_string \"BLOCK\""
														},
														"value": "BLOCK"
													},
													"src": "11338:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "11338:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 442,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "11361:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11373:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "11361:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "11361:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 446,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11381:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3130303030303030303030303030303030303030303030303030",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11396:26:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
															"typeString": "int_const 10000000000000000000000000"
														},
														"value": "10000000000000000000000000"
													},
													"src": "11381:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "11381:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 450,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "11428:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 453,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 451,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "11438:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11438:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11428:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 454,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "11452:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11428:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "11428:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11493:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11485:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11485:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 461,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 914,
																"src": "11497:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "11497:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 463,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "11509:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 457,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "11476:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11476:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "11471:51:0"
											}
										]
									},
									"documentation": null,
									"id": 467,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11297:2:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11307:0:0"
									},
									"scope": 899,
									"src": "11286:241:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "11634:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 472,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "11647:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 471,
												"id": 474,
												"nodeType": "Return",
												"src": "11640:14:0"
											}
										]
									},
									"documentation": "@dev Returns the bep token owner.",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11599:2:0"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "11625:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11625:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11624:9:0"
									},
									"scope": 899,
									"src": "11582:77:0",
									"stateMutability": "view",
									"superFunction": 26,
									"visibility": "external"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "11763:27:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 481,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "11776:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 480,
												"id": 482,
												"nodeType": "Return",
												"src": "11769:16:0"
											}
										]
									},
									"documentation": "@dev Returns the token decimals.",
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11730:2:0"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "11756:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11756:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11755:7:0"
									},
									"scope": 899,
									"src": "11713:77:0",
									"stateMutability": "view",
									"superFunction": 11,
									"visibility": "external"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "11898:25:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 489,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "11911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 488,
												"id": 490,
												"nodeType": "Return",
												"src": "11904:14:0"
											}
										]
									},
									"documentation": "@dev Returns the token symbol.",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11857:2:0"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "11883:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 486,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11883:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11882:15:0"
									},
									"scope": 899,
									"src": "11842:81:0",
									"stateMutability": "view",
									"superFunction": 16,
									"visibility": "external"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "12025:23:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 497,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 431,
													"src": "12038:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 496,
												"id": 498,
												"nodeType": "Return",
												"src": "12031:12:0"
											}
										]
									},
									"documentation": "@dev Returns the token name.",
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11984:2:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "12010:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12010:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12009:15:0"
									},
									"scope": 899,
									"src": "11971:77:0",
									"stateMutability": "view",
									"superFunction": 21,
									"visibility": "external"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "12154:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 425,
													"src": "12167:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 504,
												"id": 506,
												"nodeType": "Return",
												"src": "12160:19:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-totalSupply}.",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12119:2:0"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "12145:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12144:9:0"
									},
									"scope": 899,
									"src": "12099:85:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "external"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "12301:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 515,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "12314:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 517,
													"indexExpression": {
														"argumentTypes": null,
														"id": 516,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "12324:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12314:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 514,
												"id": 518,
												"nodeType": "Return",
												"src": "12307:25:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-balanceOf}.",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "12252:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12251:17:0"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "12292:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12291:9:0"
									},
									"scope": 899,
									"src": "12233:104:0",
									"stateMutability": "view",
									"superFunction": 33,
									"visibility": "external"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "12598:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 530,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "12614:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12614:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 532,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "12628:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "12639:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "12604:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12604:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "12604:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12659:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 528,
												"id": 537,
												"nodeType": "Return",
												"src": "12652:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transfer}.\n   * Requirements:\n   * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "12539:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "12558:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12538:35:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "12592:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12592:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12591:6:0"
									},
									"scope": 899,
									"src": "12521:147:0",
									"stateMutability": "nonpayable",
									"superFunction": 42,
									"visibility": "external"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "12800:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 548,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "12813:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 550,
														"indexExpression": {
															"argumentTypes": null,
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "12825:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12813:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 552,
													"indexExpression": {
														"argumentTypes": null,
														"id": 551,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "12832:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12813:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 547,
												"id": 553,
												"nodeType": "Return",
												"src": "12806:34:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-allowance}.",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "12736:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12736:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "12751:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12735:32:0"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "12791:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12790:9:0"
									},
									"scope": 899,
									"src": "12717:128:0",
									"stateMutability": "view",
									"superFunction": 51,
									"visibility": "external"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "13040:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 565,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13055:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13055:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 567,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "13069:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "13078:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 564,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "13046:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13046:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "ExpressionStatement",
												"src": "13046:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13098:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 563,
												"id": 572,
												"nodeType": "Return",
												"src": "13091:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-approve}.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12983:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12982:33:0"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "13034:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13034:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13033:6:0"
									},
									"scope": 899,
									"src": "12966:141:0",
									"stateMutability": "nonpayable",
									"superFunction": 60,
									"visibility": "external"
								},
								{
									"body": {
										"id": 609,
										"nodeType": "Block",
										"src": "13635:191:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 586,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "13651:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 587,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "13659:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 588,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "13670:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "13641:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13641:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "13641:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 592,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "13692:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 593,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "13700:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13700:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 602,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "13752:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13760:42:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	},
																	"value": "BEP20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
																		"typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 595,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13714:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 597,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 596,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 576,
																			"src": "13726:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13714:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 600,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 598,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "13734:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13734:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13714:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "13714:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13714:89:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 591,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "13683:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13683:121:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "13683:121:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13817:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 584,
												"id": 608,
												"nodeType": "Return",
												"src": "13810:11:0"
											}
										]
									},
									"documentation": "@dev See {BEP20-transferFrom}.\n   * Emits an {Approval} event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of {BEP20};\n   * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13560:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13560:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13576:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13595:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13559:51:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "13629:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13629:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13628:6:0"
									},
									"scope": 899,
									"src": "13538:288:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "14280:111:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 620,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14295:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14295:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 622,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "14309:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 630,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "14357:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 623,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14318:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 626,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 624,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14330:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14330:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14318:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 628,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 627,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "14344:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14318:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 138,
																"src": "14318:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14318:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "14286:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14286:83:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 633,
												"nodeType": "ExpressionStatement",
												"src": "14286:83:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14382:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 618,
												"id": 635,
												"nodeType": "Return",
												"src": "14375:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14221:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14238:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14220:37:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "14274:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 616,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14274:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14273:6:0"
									},
									"scope": 899,
									"src": "14194:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "14938:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 647,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "14953:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14953:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 649,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "14967:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 657,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "15015:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15032:39:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	},
																	"value": "BEP20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
																		"typeString": "literal_string \"BEP20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 650,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "14976:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 653,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 651,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "14988:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14988:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14976:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 655,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 654,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "15002:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14976:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "14976:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14976:96:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "14944:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14944:129:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "14944:129:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15086:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 645,
												"id": 663,
												"nodeType": "Return",
												"src": "15079:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n   * This is an alternative to {approve} that can be used as a mitigation for\nproblems described in {BEP20-approve}.\n   * Emits an {Approval} event indicating the updated allowance.\n   * Requirements:\n   * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "14874:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14874:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "14891:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14873:42:0"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "14932:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14932:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "14931:6:0"
									},
									"scope": 899,
									"src": "14847:248:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "15347:55:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 675,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "15359:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15359:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 677,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "15373:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 674,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "15353:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15353:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "15353:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15393:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 673,
												"id": 681,
												"nodeType": "Return",
												"src": "15386:11:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\nthe total supply.\n   * Requirements\n   * - `msg.sender` must be the token owner",
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 670,
											"modifierName": {
												"argumentTypes": null,
												"id": 669,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 348,
												"src": "15322:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "15322:9:0"
										}
									],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "15299:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15298:16:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "15341:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15341:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15340:6:0"
									},
									"scope": 899,
									"src": "15285:117:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "15925:363:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 693,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 685,
																"src": "15939:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15957:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15949:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15949:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "15939:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15961:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															},
															"value": "BEP20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
																"typeString": "literal_string \"BEP20: transfer from the zero address\""
															}
														],
														"id": 692,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "15931:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15931:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "15931:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 702,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "16015:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16036:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16028:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16028:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16015:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16040:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															},
															"value": "BEP20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
																"typeString": "literal_string \"BEP20: transfer to the zero address\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "16007:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16007:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "16007:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 710,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16085:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 712,
														"indexExpression": {
															"argumentTypes": null,
															"id": 711,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "16095:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16085:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 717,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "16127:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16135:40:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																},
																"value": "BEP20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
																	"typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 713,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16105:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 715,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 714,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "16115:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16105:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "16105:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16105:71:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16085:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 721,
												"nodeType": "ExpressionStatement",
												"src": "16085:91:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 722,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16182:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 724,
														"indexExpression": {
															"argumentTypes": null,
															"id": 723,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "16192:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16182:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 729,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "16230:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 725,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16205:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 726,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "16215:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16205:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16205:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16205:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16182:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "16182:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 734,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "16257:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 735,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "16265:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 736,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "16276:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 733,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16248:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16248:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "EmitStatement",
												"src": "16243:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n   * This is internal function is equivalent to {transfer}, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n   * Emits a {Transfer} event.\n   * Requirements:\n   * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "15865:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "15881:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "15900:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "15864:51:0"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15925:0:0"
									},
									"scope": 899,
									"src": "15846:442:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "16595:227:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 748,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "16609:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16628:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16620:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16620:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "16609:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16632:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															},
															"value": "BEP20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
																"typeString": "literal_string \"BEP20: mint to the zero address\""
															}
														],
														"id": 747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "16601:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16601:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "16601:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 756,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "16673:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 759,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "16705:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 757,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "16688:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16688:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16688:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16673:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "16673:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 763,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "16718:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 765,
														"indexExpression": {
															"argumentTypes": null,
															"id": 764,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "16728:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16718:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 770,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "16762:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 766,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "16739:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 768,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 767,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 742,
																	"src": "16749:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "16739:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 138,
															"src": "16739:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16739:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16718:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "16718:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16797:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16789:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16789:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 778,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "16801:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 779,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "16810:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "16780:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16780:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "EmitStatement",
												"src": "16775:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n   * Emits a {Transfer} event with `from` set to the zero address.\n   * Requirements\n   * - `to` cannot be the zero address.",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "16553:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "16570:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "16552:33:0"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16595:0:0"
									},
									"scope": 899,
									"src": "16538:284:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "17174:267:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 791,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "17188:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17207:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17199:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17199:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17188:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17211:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															},
															"value": "BEP20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
																"typeString": "literal_string \"BEP20: burn from the zero address\""
															}
														],
														"id": 790,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "17180:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17180:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 798,
												"nodeType": "ExpressionStatement",
												"src": "17180:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 799,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "17254:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 801,
														"indexExpression": {
															"argumentTypes": null,
															"id": 800,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "17264:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17254:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 806,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "17298:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17306:36:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																},
																"value": "BEP20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
																	"typeString": "literal_string \"BEP20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 802,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 417,
																	"src": "17275:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 804,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 803,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "17285:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17275:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "17275:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17275:68:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17254:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "17254:89:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 811,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "17349:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 814,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "17381:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 812,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "17364:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "17364:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17364:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17349:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "17349:39:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 819,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "17408:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17425:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17417:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17417:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 823,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "17429:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "17399:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17399:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "EmitStatement",
												"src": "17394:42:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n   * Emits a {Transfer} event with `to` set to the zero address.\n   * Requirements\n   * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "17132:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17132:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "17149:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17131:33:0"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17174:0:0"
									},
									"scope": 899,
									"src": "17117:324:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "17913:239:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 837,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "17927:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17944:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "17936:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17936:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "17927:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17948:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															},
															"value": "BEP20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
																"typeString": "literal_string \"BEP20: approve from the zero address\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "17919:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17919:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "17919:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 846,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "18001:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18020:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18012:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18012:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "18001:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18024:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															},
															"value": "BEP20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
																"typeString": "literal_string \"BEP20: approve to the zero address\""
															}
														],
														"id": 845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															917,
															918
														],
														"referencedDeclaration": 918,
														"src": "17993:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17993:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "17993:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 854,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "18068:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 857,
															"indexExpression": {
																"argumentTypes": null,
																"id": 855,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 829,
																"src": "18080:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18068:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 858,
														"indexExpression": {
															"argumentTypes": null,
															"id": 856,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "18087:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18068:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 859,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "18098:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18068:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "18068:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 863,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "18124:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 864,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "18131:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 865,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "18140:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 862,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "18115:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18115:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 867,
												"nodeType": "EmitStatement",
												"src": "18110:37:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n   * Emits an {Approval} event.\n   * Requirements:\n   * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "17856:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "17871:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "17888:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17888:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "17855:48:0"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17913:0:0"
									},
									"scope": 899,
									"src": "17838:314:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "18377:158:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 877,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "18389:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 878,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "18398:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 876,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "18383:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18383:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "18383:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 882,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "18420:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 883,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "18429:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18429:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 892,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "18482:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18490:38:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	},
																	"value": "BEP20: burn amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
																		"typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 885,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "18443:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 887,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 886,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 871,
																			"src": "18455:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "18443:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 890,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 888,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "18464:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18464:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "18443:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "18443:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18443:86:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 881,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "18411:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18411:119:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "18411:119:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n   * See {_burn} and {_approve}.",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "18335:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "18352:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "18334:33:0"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18377:0:0"
									},
									"scope": 899,
									"src": "18316:219:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 900,
							"src": "10968:7569:0"
						}
					],
					"src": "0:18537:0"
				},
				"id": 0
			}
		}
	}
}